
(function() {var s= [];
s.push(new Session({id:"session_0c879fc5d8a6f6736468e12e355a9831", title:"Tutorial Registration and Coffee - Tutorial Day 1", speaker:"", start:new Date(1279357200000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_fbad5e48741cd65a375e7f79f5ef2276", title:"Python Foundation Class", speaker:"John Pinner", start:new Date(1279358100000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>An Introduction to Programming with Python</p><p><a href=\"/talks/speakers/index.html#pinner_john\">John Pinner</a></p><p>Tutorial, Full Day (beginners)</p><p>If you are a programmer new to Python, or if you have 'picked it up', this tutorial will give you a solid foundation for the future.</p><p>The tutorial will start by getting to know the Python interpreter and taking a look at Python's introspective features, moving onto data types, sequences and dictionaries. This will be followed by functions, classes and modules and by the end of the day you will know how to develop your Python knowledge further.</p><p>Bring your laptop and get to know the Python interpreter! If you haven't got a laptop, let us know and we may be able to arrange a laptop loan (no promises).</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20Foundation%20Class\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_5793e3e70992ca917a0c5141f1dda931", title:"SCons\, The Builder", speaker:"Russel Winder", start:new Date(1279358100000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_db3986ed2c1e86b59026225674754b72", title:"WSGI from Start to Finish", speaker:"Gustavo Narea", start:new Date(1279358100000), room:"Lecture Room 2", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How to use the power of WSGI to solve problems your framework cannot solve</p><p><a href=\"/talks/speakers/index.html#narea_gustavo\">Gustavo Narea</a></p><p>Tutorial, Half day (advanced)</p><p>Web Application Frameworks are so popular because they take care of all the common (and boring) routines required to run applications, and expose a high level interface which hides a great deal of the complexity.</p><p>But some problems are better solved at the point of HTTP request and response processing rather than using the mechanisms provided by a framework. Sometimes this may even be the only option.</p><p>The low-level infrastructure to generate an HTTP response to an HTTP request in Python applications are defined by the Web Server Gateway Interface (WSGI), which defines the communication between the server gateway (e.g., mod_wsgi) and the Python framework.</p><p>This tutorial outlines the theory and discusses practical approaches to solve real-world problems in development and deployment using WSGI. Participants will learn to write (complex) WSGI applications and middleware, integrate WSGI solutions in their frameworks and identify the best deployment method for their applications.</p><p><a href=\"http://wiki.europython.eu/Talks/Wsgi%20From%20Start%20To%20Finish\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_24e327be715d18cf06909c883254c3b4", title:"py.test I - rapid easy testing", speaker:"Holger Krekel", start:new Date(1279358100000), room:"Lecture Room 3", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Introduction to basic testing principles and py.test usage</p><p><a href=\"/talks/speakers/index.html#krekel_holger\">Holger Krekel</a></p><p>Tutorial, Half day (beginners)</p><p>Want to learn writing tests in Python? This tutorial introduces basic practises using the popular py.test (<a class=\"reference external\" href=\"http://pytest.org\">http://pytest.org</a>) tool. We start with an overview on testing and tools in Python and then discuss and exercise basic idioms in a step-by-step manner. We cover the basic writing, organisation and running of tests and debugging options. In the second part we discuss setup and tear-down of test state, usage and configuration of test functions arguments and introduce coverage testing. We will close with time to answer questions and discuss topics from the participants.</p><p><a href=\"http://wiki.europython.eu/Talks/PyTest%20I%20Rapid%20Easy%20Testing\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_c8cac880526ef159fc22c14b89fae8fd", title:"web2py", speaker:"Massimo Di Pierro", start:new Date(1279358100000), room:"Band Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>bringing python web development to a larger audience</p><p><a href=\"/talks/speakers/index.html#di pierro_massimo\">Massimo Di Pierro</a></p><p>Tutorial, Half day (intermediate)</p><p>This is a tutorial on the web2py web framework. We will cover the motivations for creating web2py, it main design decisions, and overview of main features. We will emphasize differences between web2py and other frameworks (like execution vs importing, the web based IDE, the ticketing system, the GAE-friendly database abstraction layer) and some of its more standard features (routing, dispatching, MVC design, form generation, postbacks, validation, security features and internationalization). We will discuss the new plugin system.</p><p><a href=\"http://wiki.europython.eu/Talks/Web2Py\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-89472", title:"Break", speaker:"", start:new Date(1279363500000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_9cb63ccf6f56a4f46a99ecbd20bf9e9b", title:"Python Foundation Class (2)", speaker:"John Pinner", start:new Date(1279364400000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_329f327a24a55e4c7dfe4b5b33e7a3b9", title:"SCons\, The Builder (2)", speaker:"Russel Winder", start:new Date(1279364400000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_b855d805beaf16c37b4f046ae66e5b89", title:"WSGI from Start to Finish (2)", speaker:"Gustavo Narea", start:new Date(1279364400000), room:"Lecture Room 2", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_6896644d028f4239a3ea009735a0e5ce", title:"py.test I - rapid easy testing (2)", speaker:"Holger Krekel", start:new Date(1279364400000), room:"Lecture Room 3", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_f046f0f764db1ac25c20cde6a7775e4c", title:"web2py (2)", speaker:"Massimo Di Pierro", start:new Date(1279364400000), room:"Band Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_20100719T124658Z-4664", title:"Lunch", speaker:"", start:new Date(1279369800000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_08c41a5152d791713a22cb0c684920de", title:"JavaScript for Pythonistas", speaker:"Jonathan Fine", start:new Date(1279375200000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>For those who know Python and want to learn JavaScript</p><p><a href=\"/talks/speakers/index.html#fine_jonathan\">Jonathan Fine</a></p><p>Tutorial, Half day (intermediate)</p><p>Although both dynamic languages, JavaScript and Python are very different. For example, their object and inheritance models are very different.</p><p>We will cover these fundamental differences and, if there is time, some mechanisms for classes, modules and testing in JavaScript.</p><p><a href=\"http://wiki.europython.eu/Talks/Javascript%20For%20Pythonistas\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_c0c65a7016f92a700530afb5aca304b4", title:"SCons\, The Builder (3)", speaker:"Russel Winder", start:new Date(1279375200000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_fbad5e48741cd65a375e7f79f5ef2276", title:"Python Foundation Class", speaker:"John Pinner", start:new Date(1279375200000), room:"Lecture Room 2", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>An Introduction to Programming with Python</p><p><a href=\"/talks/speakers/index.html#pinner_john\">John Pinner</a></p><p>Tutorial, Full Day (beginners)</p><p>If you are a programmer new to Python, or if you have 'picked it up', this tutorial will give you a solid foundation for the future.</p><p>The tutorial will start by getting to know the Python interpreter and taking a look at Python's introspective features, moving onto data types, sequences and dictionaries. This will be followed by functions, classes and modules and by the end of the day you will know how to develop your Python knowledge further.</p><p>Bring your laptop and get to know the Python interpreter! If you haven't got a laptop, let us know and we may be able to arrange a laptop loan (no promises).</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20Foundation%20Class\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_873faced9b03910b61a8d8e89d20a573", title:"py.test II - advanced configs", speaker:"Holger Krekel", start:new Date(1279375200000), room:"Lecture Room 3", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Parametrization and distribution techniques, best practises</p><p><a href=\"/talks/speakers/index.html#krekel_holger\">Holger Krekel</a></p><p>Tutorial, Half day (intermediate)</p><p>Want to learn about project-specific test parametrization and distributing tests to local and remote processes? How to create advanced and feature rich test environments for larger projects? In this tutorial we show and discuss best practises. We'll exercise writing of project-specific extensions and walk through some interesting helpers and extensions to grow your testing tool box. We also play with ad-hoc distributing tests across CPUs and platforms.</p><p>I'd like to leave room to discuss and work on challenges that participants bring with them (please e-mail any related ideas to me ahead of the tutorial so i can prepare - e.g. to holger.krekel at gmail com).</p><p>I recommend newcomers to py.test visit the &quot;pytest-I&quot; tutorial to make the most use out of the more advanced topics discussed in pytest-II.</p><p><a href=\"http://wiki.europython.eu/Talks/PyTest%20Ii%20Advanced%20Configs\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-26226", title:"Break", speaker:"", start:new Date(1279380600000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_72b5f19b35e16328b8ac90d322dc6f78", title:"JavaScript for Pythonistas (2)", speaker:"Jonathan Fine", start:new Date(1279381500000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_66ad7d018c72889d925fef9483dead08", title:"SCons\, The Builder (4)", speaker:"Russel Winder", start:new Date(1279381500000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_9cb63ccf6f56a4f46a99ecbd20bf9e9b", title:"Python Foundation Class (2)", speaker:"John Pinner", start:new Date(1279381500000), room:"Lecture Room 2", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_43a51e72ed10f05bb0a44ebecc7aa419", title:"py.test II - advanced configs (2)", speaker:"Holger Krekel", start:new Date(1279381500000), room:"Lecture Room 3", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_874f4d38f088acee35c77ee357703380", title:"Close for Day", speaker:"", start:new Date(1279386900000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_5ec2164e00ef4d87ef92485dc033c3a9", title:"Possible Social TBD", speaker:"", start:new Date(1279395000000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_31871d5c7689b4105600e804bbac1f79", title:"Tutorial Registration and Coffee - Tutorial Day 2", speaker:"", start:new Date(1279443600000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_8bbca704da2f2051d7d1b9901e41790c", title:"Intro to Game Programming", speaker:"Richard Jones", start:new Date(1279444500000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Learn how to write a video game</p><p><a href=\"/talks/speakers/index.html#jones_richard\">Richard Jones</a></p><p>Tutorial, Half day (beginners)</p><p>This tutorial will cover several aspects of game programming. It is designed to give the participants the information and skills they need to design a simple game and then to give them actual experience in seeing how a simple game is constructed.</p><p>At a high level I will: - give an introduction covering the elements of a successful game - present one approach for structuring your game code to keep it sane - talk about what support libraries are available - walk the participants through development of a simple game - talk through some potential further development possibilities</p><p>The game developed will cover the key game-writing skills of controlling what appears on the screen (including animation), loading resources, handling user input and simulating the environment within the game.</p><p>Participants should be familiar with Python, and have pyglet installed. I will not have time to deal with installation and compatibility issues so participants should check their laptops can run pyglet applications.</p><p><a href=\"http://wiki.europython.eu/Talks/Intro%20To%20Game%20Programming\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_b03c06a09c019e7deb03478906fde69d", title:"Test Driven Development and Good Design", speaker:"Emily Bache", start:new Date(1279444500000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A coding dojo where we will teach and learn about TDD and good design.</p><p><a href=\"/talks/speakers/index.html#bache_emily\">Emily Bache</a></p><p>Tutorial, Half day (general)</p><p>In this session we'll be learning about the process of writing tests before code called &quot;Test Driven Development&quot; (TDD). Practictitioners of this approach often report that it helps them produce better designed code. It certainly seems to produce code with better test coverage. In this session we will learn about TDD via a prepared Kata demonstration, a Randori exercise, and by examining some code that was written this way. (see <a class=\"reference external\" href=\"http://codingdojo.org\">http://codingdojo.org</a> for more information about Katas and Randori). The aim of the session is to help you learn to write code with better tests and a better design.</p><p><a href=\"http://wiki.europython.eu/Talks/Test%20Driven%20Development%20And%20Good%20Design\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_1b6fa686b68cdd89c3e2002c58baa155", title:"Intro to Google App Engine", speaker:"Wesley Chun", start:new Date(1279444500000), room:"Lecture Room 2", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Lecture &amp; workshop introducing attendees to Google App Engine</p><p><a href=\"/talks/speakers/index.html#chun_wesley\">Wesley Chun</a></p><p>Tutorial, Half day (intermediate)</p><p>Google App Engine is a unique hosting platform that lets you build applications and run them in Google's data centers using the massive global infrastructure built to run the Internet's most powerful company. App Engine offers a development environment that uses familiar technologies (Java and Python) and provides a powerful and robust set of APIs to users while maintaining security and independence from other apps running in the cloud. It is always free to get started so you can try it out with no risk, and if you need additional computing resources, you can purchase additional computing resources beyond the free quota limits. If you enable billing and trust us with your credit card, we will extend your free quotas even further; you won't get charged until you exceed those <em>extended</em> quotas. Scale your application to millions of users and pay only for what you use at competitive market pricing.</p><p>In the first part of this session, you will learn about Cloud Computing and where Google App Engine fits into this &quot;new&quot; paradigm. The presentation will cover the following topics:</p><ul class=\"simple\"><li>What is Cloud Computing?</li> <li>Challenges of building (web) applications</li> <li>What is Google App Engine?</li> <li>App Engine Components</li> <li>App Engine Services and APIs</li> <li>Some App Engine Users/Case Studies</li></ul><p>After the approximately one-hour lecture, we'll show you how to create applications that run on App Engine by building a simple but real web application from the ground up via a hand-on coding laboratory. Although based on the online tutorial, this codelab goes up and beyond what's in the documentation: you will get a more detailed step-by-step instructions to replicate that example as well as have the opportunity to extend your application with some of the newer APIs that come with App Engine. Although the codelab is available for both Java and Python users, the on-screen demonstration will be executed in Python, as it has a lower barrier of entry and takes less time to develop and understand, regardless of your core competency as this is an already time-constrained session. Users more comfortable with Java always have the option of using it instead of Python via the parallel codelab. The codelab will (time-permitting) cover as many of these App Engine features &amp; APIs as possible:</p><ul class=\"simple\"><li>Review setup and launchers</li> <li>Basic &quot;Hello World&quot; app</li> <li>Processing GET requests</li> <li>Web forms and processing POST requests</li> <li>Datastore: saving app data to the cloud</li> <li>Users service: authentication via Google Accounts</li> <li>Web templating (with Django)</li> <li>Static file support</li> <li>Caching with Memcache service</li> <li>Template inheritance</li> <li>Sending email (receiving also possible)</li> <li>XMPP service: chat/instant messaging (IM)</li> <li>Creating log entries and how to find them</li></ul><p><a href=\"http://wiki.europython.eu/Talks/Intro%20To%20Google%20App%20Engine\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_bc0fcf962c73093e4cf25e2661796d37", title:"Arduino and Python Fun", speaker:"Andrew Eliasz", start:new Date(1279444500000), room:"Band Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A practical arduino workshop and introduction to Python working with Arduino</p><p><a href=\"/talks/speakers/index.html#eliasz_andrew\">Andrew Eliasz</a></p><p>Tutorial, Full Day (general)</p><p>Arduino is a popular project for embedded interactive application development. Arduino projects - both hardware and software combined are called sketches. The aim of this workshop is to encourage programmers to &quot;get their hands dirty&quot; putting together various hardware components - leds, push buttons, sensors, motors, piezo buzzers and to program them up to &quot;perform&quot;. As this is a Python conference some techniques for controlling Arduino sketches via Python scripting will also be introduced. The aim is to &quot;bring out the tinkerer&quot; in all of us and add a &quot;dash of Python&quot; for extra &quot;fun and excitement&quot;.</p><p><a href=\"http://wiki.europython.eu/Talks/Arduino%20And%20Python%20Fun\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-39614", title:"Break", speaker:"", start:new Date(1279449900000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_c01fdf8b0667a33aad3a1f06bc2e1d3d", title:"Intro to Game Programming (2)", speaker:"Richard Jones", start:new Date(1279450800000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_18b9c79fe3a97beb0d830a49704dd6a2", title:"Test Driven Development and Good Design (2)", speaker:"Emily Bache", start:new Date(1279450800000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_f47d3c8208cede9a33c13c92b978a0fe", title:"Intro to Google App Engine (2)", speaker:"Wesley Chun", start:new Date(1279450800000), room:"Lecture Room 2", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_cd1a0028c20a7314afceed4d1e73e5df", title:"Arduino and Python Fun (2)", speaker:"Andrew Eliasz", start:new Date(1279450800000), room:"Band Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_18ea011a1e85090823f4d7d9f2b21f90", title:"Python Language Summit", speaker:"", start:new Date(1279450800000), room:"Board Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Meeting of top minds and anyone who we drag in off the street to plan world domination by Python and allied forces.</p><p>Meeting, Full Day (general)</p><p>Meeting of top minds and anyone who we drag in off the street to plan world domination by Python and allied forces.</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20Language%20Summit\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-22522", title:"Lunch", speaker:"", start:new Date(1279456200000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_28a4aa02f7755e3c35473ccec56c3b4f", title:"Code Clinic", speaker:"Raymond Hettinger\,<br />David Jones", start:new Date(1279461600000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Bring your code along to show off or to receive advice on.</p><p><a href=\"/talks/speakers/index.html#hettinger_raymond\">Raymond Hettinger</a></p><p><a href=\"/talks/speakers/index.html#david_jones\">David Jones</a></p><p>Tutorial, Half day (general)</p><p>Bring your code along to show off or to receive advice on.</p><p><a href=\"http://wiki.europython.eu/Talks/Code%20Clinic\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_0761e33bca5f18fc61e6aa50779d1ebf", title:"Hands-on testing with TextTest", speaker:"Geoffrey Bache", start:new Date(1279461600000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>This session aims to present a technique and a tool for automating maintainable black-box tests.</p><p><a href=\"/talks/speakers/index.html#bache_geoffrey\">Geoffrey Bache</a></p><p>Tutorial, Half day (general)</p><p>Testing a program by comparing text files written by the current run with those from previous runs is an old idea, but one which has fallen out of fashion. This talk aims to rehabilitate it as an agile technique and present a suitable tool, TextTest. We aim to show that there are applications where testing in this way has major advantages, and examine the advantages and disadvantages in a more general setting.</p><p>TextTest is a standalone tool and an extensible Python framework, and while it can test programs written in any language, it is especially suited to the dynamic nature of Python and to testing small command-line scripts where Python is also at home.</p><p>We will present the tool for the first half-hour or so and then get people to install it on their laptops and help them through a series of toy programs to test with it. (Starting with Hello World and getting progressively more complicated). We will cover testing scripts, legacy systems and possibly PyGTK UIs depending on how well people get on. We will finish with a &quot;retrospective&quot; where there will be an open discussion on what we have learned.</p><p>Attendees should be technically capable and reasonably familiar with Python. They should bring a laptop, with Python/PyGTK installed following the instructions given at <a class=\"reference external\" href=\"http://www.texttest.org/index.php?page=documentation_trunk&amp;n=install_texttest\">http://www.texttest.org/index.php?page=documentation_trunk&amp;n=install_texttest</a> .</p><p><a href=\"http://wiki.europython.eu/Talks/HandsOn%20Testing%20With%20Texttest\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_409b3bc71a11fdbcfe03095f59237b57", title:"SQLAlchemy", speaker:"Jason Kirtland", start:new Date(1279461600000), room:"Lecture Room 2", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A hands-on tutorial for intermediate to advanced SQLAlchemy users</p><p><a href=\"/talks/speakers/index.html#kirtland_jason\">Jason Kirtland</a></p><p>Tutorial, Half day (intermediate)</p><p>Is SQLAlchemy a framework or a toolkit? As a batteries-included library for database interaction and object relational mapping, SQLAlchemy provides a cohesive set of features that work out of the box. While convenient and powerful as-is, SQLAlchemy is not intended as a &quot;one size fits all&quot; technology. Tailoring is a core feature of SQLAlchemy, from allowing DBA-provided SQL to be used in favor of generated SQL to completely bespoke object relational mapping.</p><p>This tutorial delves into customizing and tailoring SQLAlchemy to meet your needs, be they targeting a specific database and production environment, or authoring cross-platform software that adapts elegantly to different RDBMS servers. The focus will not be on mapping your RDBMS to SQLAlchemy- the documentation and mailing list are fantastic resources for that- instead, the focus is on mapping your code to SQLAlchemy and composing the toolkit into novel solutions for your requirements.</p><p>Customizing and building on a third party library can feel risky, especially when that library has not released a &quot;1.0&quot; milestone. In this session, we will review which parts of SQLAlchemy are core features and behaviours and which are swappable extensions or opinionated features that can be changed. You will leave the session knowing how to safely extend and reuse SQLAlchemy features in a future-proof fashion.</p><p>Building on that understanding of the core features, we will go on to explore the hooks and customization points at all levels of the package, from connection &amp; pooling, to SQL DML and DDL generation, through object relational mapping.</p><p>This is a hands-on session with working, interactive examples to explore, so please bring a laptop loaded with Python 2.x. All other requirements will be provided on site.</p><p>Some prior experience with SQLAlchemy is highly suggested. Advanced SQL experience is not required.</p><p><a href=\"http://wiki.europython.eu/Talks/Sqlalchemy\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_4cddc59d185916d6e5902872bb10383d", title:"Arduino and Python Fun (3)", speaker:"Andrew Eliasz", start:new Date(1279461600000), room:"Band Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_2b6545e28e5a42f876db7fe61928afc6", title:"Python Language Summit (2)", speaker:"", start:new Date(1279461600000), room:"Board Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_20100719T124658Z-78409", title:"Break", speaker:"", start:new Date(1279467000000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_c7ddf6a2a8e02bf68e50b9a690342404", title:"Code Clinic (2)", speaker:"Raymond Hettinger\,<br />David Jones", start:new Date(1279467900000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_a6589ecab9bdcd47b1f8018f48ba9b67", title:"Hands-on testing with TextTest (2)", speaker:"Geoffrey Bache", start:new Date(1279467900000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_d620c6134ca2048ab759a3bca6395e12", title:"SQLAlchemy (2)", speaker:"Jason Kirtland", start:new Date(1279467900000), room:"Lecture Room 2", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_c558364ff50580cc15a8071553f4c010", title:"Arduino and Python Fun (4)", speaker:"Andrew Eliasz", start:new Date(1279467900000), room:"Band Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_099d188c2b174fa65031629633070e5f", title:"Python Language Summit (3)", speaker:"", start:new Date(1279467900000), room:"Board Room", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_184f5ffca656e8562cd0144b5c9ce0e7", title:"Bag Stuffing and Preparation for Registration by Volunteers", speaker:"", start:new Date(1279473300000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_5437e2e1e080fd221f2343b69f1a8758", title:"Social\, TBD", speaker:"", start:new Date(1279481400000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_88d1b789ecc85d2aa9604af830b6ddfa", title:"Registration and Coffee - Conference Day 1", speaker:"", start:new Date(1279526400000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_4689748185fc4e203109f4951f384c04", title:"Welcome\, Adrian Boult Hall", speaker:"", start:new Date(1279530000000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_3decf5dcf35675c0788ff1972079dab6", title:"Russel Winder\, Adrian Boult Hall", speaker:"Keynote", start:new Date(1279530900000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_b530aa25464c6116925a26b4c7eb5e38", title:"New *and* Improved", speaker:"Michael Foord", start:new Date(1279532700000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Coming changes to unittest in Python 2.7 &amp; 3.2</p><p><a href=\"/talks/speakers/index.html#foord_michael\">Michael Foord</a></p><p>Talk, 45 minutes (intermediate)</p><p>In Python 2.7 and 3.2 a whole bunch of improvements to unittest will arrive. unittest is the Python standard library testing framework and for several years it has languished whilst other Python testing frameworks have innovated. Some of the best innovations have made their way into unittest which has had quite a renovation.</p><p>This talk will go through the major changes, like the new assert methods, test discovery and the load_tests protocol, and also explain how they can be used with earlier versions of Python.</p><p><a href=\"http://wiki.europython.eu/Talks/New%20And%20Improved\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_e3d47d5e9c2080e8e32b894e6153dfee", title:"The Ring of Python", speaker:"Holger Krekel", start:new Date(1279532700000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_1a0d6bb6098e9949a8f9a300529e8825", title:"Why open source works", speaker:"Lennart Regebro", start:new Date(1279532700000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A look on what makes open source work, and what that means for copyright and patents.</p><p><a href=\"/talks/speakers/index.html#regebro_lennart\">Lennart Regebro</a></p><p>Talk, 45 minutes (general)</p><p>It seems like a mystery that open source can work. Why would any rational being give away their work for free when they can charge for it? And how come an operating system build by volunteers in their free time rules the internet?</p><p>This talk uses the history of steam engines, pretty pictures and great music to explain the mechanics behind openness, and explains why open source works, and what this means for intellectual property in general.</p><p><a href=\"http://wiki.europython.eu/Talks/Why%20Open%20Source%20Works\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f94b6c8a5b79f0e29626486d75c811d9", title:"Idiomatic Python", speaker:"Raymond Hettinger", start:new Date(1279532700000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Python tips, tricks, and idioms</p><p><a href=\"/talks/speakers/index.html#hettinger_raymond\">Raymond Hettinger</a></p><p>Talk, 45 minutes (general)</p><p>Using syntax well: slices, tuple unpacking, for-else, for-break. Take advantage of language dynamics: introspection, bound methods, and getattr() Non-java python: duck-typing, abstract base classes, easier-to-ask-forgiveness, and super(). Using iteration as glue: iterator pipelines, itertools, and generators. Higher-level python: set(), sorted(), heapq, etc.</p><p><a href=\"http://wiki.europython.eu/Talks/Idiomatic%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-55851", title:"Break", speaker:"", start:new Date(1279535400000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_2ba328064938287ba3107c0179d4a8b2", title:"Good Tests\, Bad Tests", speaker:"William Reade", start:new Date(1279537200000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_f06d3948231a14c2f3481a4a681e70ca", title:"PyPy 1.2", speaker:"Antonio Cuni", start:new Date(1279537200000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_38afb0c875eca93b8098981ad29ab6ba", title:"The Development Process of Python", speaker:"Ezio Melotti", start:new Date(1279537200000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Behind the scenes of CPython's development process</p><p><a href=\"/talks/speakers/index.html#melotti_ezio\">Ezio Melotti</a></p><p>Talk, 45 minutes (general)</p><p>Python is an open source language, where everyone can contribute, but have you actually thought about working on it and making it even better? During the last two years I contributed to Python first as a normal user and now as a core developer and with this talk I want to unveil what happens &quot;behind the scenes&quot;.</p><p>I will talk about:</p><blockquote><ul class=\"simple\"><li>The tools used;</li> <li>The workflow;</li> <li>The community;</li> <li>The structure of CPython;</li> <li>How the two main branches (Python 2.x and Python 3.x) are maintained;</li> <li>What will change with the switch from SVN to Mercurial and with the release of Python 2.7.</li></ul></blockquote><p>If you are just curious or if you want to know how Python evolves, this is your chance.</p><p><a href=\"http://wiki.europython.eu/Talks/The%20Development%20Process%20Of%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_5a8606eb890f700b539f93b0d5db0598", title:"Glashammer", speaker:"Ali Afshar", start:new Date(1279537200000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>And now for something completely different: Glashammer web application framework</p><p><a href=\"/talks/speakers/index.html#afshar_ali\">Ali Afshar</a></p><p>Talk, 45 minutes (intermediate)</p><p>This talk will describe the Glashammer web application framework, specifically:</p><ul class=\"simple\"><li>How to write a web framework without getting mercilessly flamed</li> <li>The motivation behind writing a new web framework and the limitations of the current web frameworks</li> <li>General structure of Glashammer and how it solves some of the limitations of current frameworks</li> <li>How to leverage best-of-breed libraries to do what you want without reinventing any wheels</li> <li>Extending Glashammer</li> <li>A basic Glashammer application</li> <li>Unit testing a Glashammer application</li> <li>Things that Glashammer can't do, but would be really wicked</li></ul><p>The talk will be high-level, and maybe fun. And I promise not to be mean about Django (an honourable framework).</p><p><a href=\"http://wiki.europython.eu/Talks/Glashammer\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_5072356f55ca4669f4dc484376469168", title:"Meet and Greet Partners", speaker:"Sheila Pinner\,<br />Mary Mooney", start:new Date(1279539000000), room:"Partners' Programme", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Meet and Greet Partners at Conference Reception Desk</p><p><a href=\"/talks/speakers/index.html#Pinner_Sheila\">Sheila Pinner</a></p><p><a href=\"/talks/speakers/index.html#Mooney_Mary\">Mary Mooney</a></p><p>Partner Programme, 60 minutes (general)</p><p>Meet and Greet Partners at Conference Reception Desk</p><p><a href=\"http://wiki.europython.eu/Talks/Meet%20And%20Greet%20Partners\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_78560b7fa6ebfadec1ff1775e1ed33e3", title:"TextTest", speaker:"Geoffrey Bache", start:new Date(1279539900000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_3c8109ed1d6878d5a2712211e539e151", title:"How Import Works", speaker:"Brett Cannon", start:new Date(1279539900000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How import goes from a syntactic statement to giving your back a module</p><p><a href=\"/talks/speakers/index.html#cannon_brett\">Brett Cannon</a></p><p>Talk, 45 minutes (beginners)</p><p>Python's import statement plays a pivotal role in any program that does any serious work. Because of this it is important to understand how it works to be able to use it properly and to its full extent.</p><p>This talk will cover as much detail as 60 minutes will allow about how the import statement works. Covering everything from how the import statement is really syntactic sugar for a function call down to how Python actually imports bytecode, as much of the process will be discussed as possible. And time permitting, a discussion of how to change the semantics of import to add useful features.</p><p><a href=\"http://wiki.europython.eu/Talks/How%20Import%20Works\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_0b4537f859e418ce1b59dafcd027d2c8", title:"Running Ghana VAT on Python", speaker:"Marc-André Lemburg", start:new Date(1279539900000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Lessons learned from a VAT collection project in Ghana, Africa</p><p><a href=\"/talks/speakers/index.html#lemburg_marc-andré\">Marc-André Lemburg</a></p><p>Talk, 45 minutes (intermediate)</p><p>During the last year eGenix.com has run a custom project for a client in Switzerland with the aim of creating an end-to-end country-wide online VAT collection system for the Ghana VAT Office.</p><p>During the project we've learned a few important lessons, the more interesting of which I'd like to share with you.</p><p><a href=\"http://wiki.europython.eu/Talks/Running%20Ghana%20Vat%20On%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-50862", title:"Lunch", speaker:"", start:new Date(1279542600000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_09852175c16f811eef45afebb53dd7d1", title:"PostgreSQL's Python soup", speaker:"Hannu Krosing", start:new Date(1279548000000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>There are at least 5 DBAPI compliant PostgreSQL adapters and more than one embedded python in</p><p><a href=\"/talks/speakers/index.html#krosing_hannu\">Hannu Krosing</a></p><p>Talk, 45 minutes (intermediate)</p><p>A discussion about different means of accessing PostgreSQL database from Python, what are the differences and which one to use.</p><p>There is also more than one version of embedded Python language usable inside Python server.</p><p>When should you move some of your application logic into the database, and should you use PL/PythonU or some other embedded language there.</p><p>What are pros and cons of using object relational mappers vs. writing your own SQL vs. writing database functions and calling these.</p><p>When to implement connection pool in your applications database layer, and when to use external connection pool.</p><blockquote><ul class=\"simple\"><li>PostgreSQL adapters: pgsql, psycopg, psycopg2, pygresql, ocpgdb</li> <li>Generic adapters: sqlrelay, odbc</li> <li>Object-relational mappers: SQLAlchemy, SQLObject, STORM</li> <li>Connection pools: pgpool, pgpool II, pgbouncer</li></ul></blockquote><p><a href=\"http://wiki.europython.eu/Talks/PostgresqlS%20Python%20Soup\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_5436a2d783ecab979397c3fd9be1d71d", title:"Cross Platform SIG", speaker:"Alex Willmer", start:new Date(1279548000000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_ae85deb4126709ead820444290036625", title:"Web/mobile templating in Silva", speaker:"Kit Blake", start:new Date(1279548000000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Provide authors with extended layout options, maintain web and mobile variants of the same content</p><p><a href=\"/talks/speakers/index.html#blake_kit\">Kit Blake</a></p><p>Talk, 45 minutes (intermediate)</p><p>The Silva CMS has new innovations in templating for web and mobile content presentation. This talk will describe how the hierarchy of templates interact, how authors can have a greater degree of freedom for content layout, and how developers can provide and customize templates for variation in their sites. The system allows users to maintain both web and mobile variants of the same content.</p><p>The second half of the talk will be more technical and delve into 'silva.core.layout', content layout, and mobile templating.</p><p><a href=\"http://wiki.europython.eu/Talks/WebMobile%20Templating%20In%20Silva\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_71de378a766dabcf59297bf360699a74", title:"Improving your skills", speaker:"Emily Bache", start:new Date(1279549800000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>What are you doing to improve your coding skills?</p><p><a href=\"/talks/speakers/index.html#bache_emily\">Emily Bache</a></p><p>Talk, 30 minutes (general)</p><p>Everyone needs lifelong learning and continuous improvement. I've got a few ideas and tips for what you can do. (I gave this talk at my tutorial yesterday, the one about TDD and good design.)</p><p><a href=\"http://wiki.europython.eu/Talks/Improving%20Your%20Skills\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_e780d2c3d73771c06da30ca53b94384b", title:"The Birmingham City Centre Strol", speaker:"Sheila Pinner\,<br />Mary Mooney", start:new Date(1279549800000), room:"Partners' Programme", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_95b7a5f29d501c2cebe70f992d7486cd", title:"Testing HTTP Apps with Python3", speaker:"Łukasz Langa", start:new Date(1279551600000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Introduction to a Web app testing framework written in Python 3</p><p><a href=\"/talks/speakers/index.html#langa_lukasz\">Łukasz Langa</a></p><p>Talk, 45 minutes (intermediate)</p><p>Monstrum is yet another approach to testing HTTP applications. It enables developers to record test sessions in their browsers, edit the parametrized outcome and play it back multiple times. There are a couple of unique features like automatic parametrization of variables during recording, support for a wide range of assertions to be checked during test playback and a visual test configurator/runner.</p><div class=\"section\" id=\"presentation-plan\"><h1>Presentation plan</h1><ol class=\"arabic simple\"><li>Basic concepts and design decisions.</li> <li>Features overview.</li> <li>The impact of Python 3 &amp; how it feels like to actually develop in Py3K.</li> <li>Brief comparison with Selenium, Windmill, JMeter and Funkload.</li> <li>Demo.</li></ol></div><p><a href=\"http://wiki.europython.eu/Talks/Testing%20Http%20Apps%20With%20Python3\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_764e4f7fa311951e41555d0643210025", title:"JTool", speaker:"Erik Groeneveld", start:new Date(1279551600000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_eea1f923ebca2feba57b55213b8b6a4c", title:"Python from the Inside-Out", speaker:"Austin Bingham", start:new Date(1279551600000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Experiences introducing into the core of a large legacy C++ application</p><p><a href=\"/talks/speakers/index.html#bingham_austin\">Austin Bingham</a></p><p>Talk, 45 minutes (general)</p><div class=\"section\" id=\"summary\"><h1>Summary</h1><p>We will present our experiences with successfully introducing Python into RMS, a large legacy C++ application and the flagship product for Roxar. We will discuss the hurdles we faced in realizing our ideas (political, technical, and cultural), and how we addressed them. We will also talk about the somewhat unorthodox path by which Python found its way into RMS (i.e. by replacing the entire persistence layer), as well as the difficulties and sometimes unexpected benefits of taking this approach. We present this as a Python success story, a practical how-to, and a morale booster for those hoping to do the same thing.</p></div><div class=\"section\" id=\"outline\"><h1>Outline</h1><ul class=\"simple\"><li>What we do and how we're using Python</li> <li>How we decided to use Python</li> <li>How we convinced the decision-makers</li> <li>Our roadmap for introducing Python into the code</li> <li>Obstacles to the adoption of Python (and solutions!)</li> <li>Technical difficulties with implementation and development</li> <li>Benefits we've realized from using Python</li> <li>Lessons learned and where we're going</li></ul></div><p><a href=\"http://wiki.europython.eu/Talks/Python%20From%20The%20InsideOut\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_b6422f31149bbf84feb53661bc4056f5", title:"Web SIG", speaker:"Paul Boddie", start:new Date(1279551600000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Python on the Web - Special Interest Group</p><p><a href=\"/talks/speakers/index.html#boddie_paul\">Paul Boddie</a></p><p>Talk, 45 minutes (intermediate)</p><p>Open circle discussion about Django, web frameworks, add ons and anything else you want to mention. Plus the opportunity to 'show and tell' your website or your code.</p><p><a href=\"http://wiki.europython.eu/Talks/Web%20Sig\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_96d510e3157dd7be90cd97298c210f1d", title:"Python &amp\; Selenium Testing", speaker:"Raymond Hettinger", start:new Date(1279554300000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_da8488506eb0f9f3daf3c5b28ec3a9ca", title:"Implementing Go's Select", speaker:"Andrew Francis", start:new Date(1279554300000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_92b1fbf54b78896dc4de71feaad6e39e", title:"Porting to Python 3", speaker:"Lennart Regebro", start:new Date(1279554300000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A look at the strategies for porting to Python 3, and a quick look of the most common problems.</p><p><a href=\"/talks/speakers/index.html#regebro_lennart\">Lennart Regebro</a></p><p>Talk, 45 minutes (general)</p><p>This talk is split into two parts. The first will look at the different options in how to handle Python 3 porting. Do you need to support Python 2, or just port once? Should your code run unmodified or via 2to3, etc.</p><p>The second part looks at the most common problems in porting, and how you can solve them.</p><p><a href=\"http://wiki.europython.eu/Talks/Porting%20To%20Python%203\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_651ee28b6cc4a04b9431ee53820db767", title:"What does it all mean?", speaker:"Zeth", start:new Date(1279554300000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Developing ontologies to expose the semantics of your data.</p><p><a href=\"/talks/speakers/index.html#zeth\">Zeth</a></p><p>Talk, 45 minutes (intermediate)</p><p>With existing data storage and presentation software, you know what your data means but the computer does not. You can present the information to humans, but processing the data by applications requires direct assistance by the human programmer to provide meaning (semantics) to the data.</p><p>The semantic web is about making the meaning of your data explicit so the software itself can act differently based on the data and the relationships within your data. The 'holy grail' of the semantic web is to use explicit semantics to allow programs, i.e. ones you have never heard of and ones that have not been invented yet, to be able to automatically use your data; as well as to allow you to write programs that will work with data you have never heard of when you wrote the program.</p><p>Semantic Web technologies build on existing exchange and serialization technologies such as RDF and XML to enable you to represent the knowledge within your data; such a representation of an information domain is called an 'ontology'. The Web Ontology Language (OWL) is one way to express semantics within your applications, it is developed and endorsed by the World Wide Web Consortium.</p><p>There is another talk called '<a class=\"reference external\" href=\"http://www.europython.eu/talks/talk_abstracts/#talk68\">Django and the Semantic Web</a>' providing a more general overview of the semantic web, this talk will concentrate on how I have attempted to author an ontology in OWL using Python as well as in Django, and how you might approach this with your datasets.</p><p>While not intended to be a &quot;What has Zeth done for us lately talk&quot;, I will explain how I am attempting to produce a single and consistent ontology and OWL interface for three types of data (XML, SQL and images) that I involved in creating and publishing. It will be more of a discussion, rather than the presentation of a finished solution. A dialogue on the best way forward toward a useful and generally applicable ontology implementation for those working within the Python community.</p><p><a href=\"http://wiki.europython.eu/Talks/What%20Does%20It%20All%20Mean\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-84535", title:"Break", speaker:"", start:new Date(1279557000000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_19e6aca85ee1ed1bb7c743214cf56a26", title:"Testing in Python with py.test", speaker:"Holger Krekel", start:new Date(1279558800000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Overview on testing approaches and news from py.test</p><p><a href=\"/talks/speakers/index.html#krekel_holger\">Holger Krekel</a></p><p>Talk, 45 minutes (beginners)</p><p>I'll start with an overview of testing approaches and current tools for testing with Python. We then look into new features and new plugins for py.test which has been inspiring changes in the Python testing world for a number of years now. I'll highlight how py.test fits a growing number of needs, for example:</p><ul class=\"simple\"><li>Functional and system testing</li> <li>Interaction with Non-Python (programmers)</li> <li>Python coverage testing</li> <li>testing compatibility with Python3</li> <li>run tests written for nose or unittest</li> <li>ad-hoc distribute tests to local or remote Python environments</li> <li>run javascript unit-tests in real browsers</li></ul><p>I'll conclude with emerging features regarding testing-in-the-cloud and my thoughts on test tool convergence.</p><p><a href=\"http://wiki.europython.eu/Talks/Testing%20In%20Python%20With%20PyTest\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_1721fe1936ec2037161443bb5d142cbd", title:"JessyInk", speaker:"Hannes Hochreiner", start:new Date(1279558800000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A set of Python-based extensions to create presentations in Inkscape.</p><p><a href=\"/talks/speakers/index.html#hochreiner_hannes\">Hannes Hochreiner</a></p><p>Talk, 45 minutes (general)</p><p>Python is well known as a language for scripting and extending many popular open-source applications. As such it provides incredible opportunities to create new and powerful tools with very little code. In this talk, JessyInk, a collection of extensions for the well-known vector-graphics editing application Inkscape will be presented. Using JessyInk, Inkscape can be turned into an editor for presentations that can be played in any modern browser.</p><p>Starting off, a quick introduction to Inkscape and its extension system will be provided. Subsequently, the basics of creating and deploying Python-based extensions for Inkscape will be presented. The JessyInk extensions will be used to illustrate how a variety of different tasks can be accomplished. In the course of this discussion, the design ideas underlying JessyInk will be laid out as well. Hence, insights into the details as well as the overarching architecture of JessyInk will be provided.</p><p>It will be shown how the versatility of Python was instrumental for the quick development of JessyInk. It provided the essential glue to join the editing power and ease of a desktop application with the exciting possibilities of standards based browsers as a presentation platform. The talk will be concluded by a showcase of the features currently supported by JessyInk. Furthermore, ideas for new features and future direction of development will be presented.</p><p><a href=\"http://wiki.europython.eu/Talks/Jessyink\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_9c38e232577319b3b608d3585e0b0230", title:"Muddle\, inventing a build system", speaker:"Richard Watts", start:new Date(1279558800000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_f842f3f7237e3c6154e3cbeb3b6ded8f", title:"Open Data &amp\; coding data.gov.uk", speaker:"David Read", start:new Date(1279558800000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_150e884f375180f3b0c596793814effa", title:"Testing Panel", speaker:"Ali Afshar", start:new Date(1279561500000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>We have assembled a group of Python testing experts for you to quiz or harangue with all your difficult testing questions.</p><p><a href=\"/talks/speakers/index.html#afshar_ali\">Ali Afshar</a></p><p>Meeting, 45 minutes (general)</p><p>Panel members will include:</p><ul class=\"simple\"><li>Raymond Hettinger (Python core developer)</li> <li>Jason Huggins (Creator of Selenium, web testing tool)</li> <li>Michael Foord (maintainer of unittest and creator of mock)</li> <li>Holger Krekel (creator of py.test)</li> <li>Geoff Bache (creator of TextTest and PyUseCase)</li> <li>Mark Ramm (Turbogears BDFL)</li></ul><p>Expect plenty of vigorous debate on Python testing tools and techniques.</p><p>The panel will be expertly chaired by experienced Python developer Ali Afshar. If you have questions you would like the panel to answer you can add them to google moderator, or vote for (or against) questions already there:</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"http://www.google.com/moderator/#15/e=6621&amp;t=6621.40&amp;f=6621.283e5\">Testing Panel on Google Moderator</a></li></ul><p><a href=\"http://wiki.europython.eu/Talks/Testing%20Panel\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_7269b49873f183b27e338d9570fcd02f", title:"Scraperwiki", speaker:"Julian Todd", start:new Date(1279561500000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>What else could it be good for?</p><p><a href=\"/talks/speakers/index.html#todd_julian\">Julian Todd</a></p><p>Talk, 45 minutes (general)</p><p>There are many on-line repositories where you can upload your code, browse other people's code, and download it for editing and use. But only Scraperwiki allows you to do everything over the browser, including running and debugging.</p><p>The system is primarily intended for webscraping where the scripts are short, self-contained, specialized, and frequently out of date and broken. Scraperwiki is supposed to overcome the normally overlooked maintenance problem. This talk will explore what other things a Python Codewiki could be used for.</p><p><a href=\"http://wiki.europython.eu/Talks/Scraperwiki\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_ff0c973e44d8fec68831b652d9c8c32b", title:"KBUS", speaker:"Tony Ibbs", start:new Date(1279561500000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_132062eb1d67064d3ec03592615b6bc3", title:"Finish", speaker:"", start:new Date(1279564200000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_5437e2e1e080fd221f2343b69f1a8758", title:"Social\, TBD", speaker:"", start:new Date(1279567800000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_cc4d6624d21234cf324a537dca97754f", title:"Coffee - Conference Day 2", speaker:"", start:new Date(1279614600000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_c0f9ac9f8f9e06e057f8fd5629c5617f", title:"Bruce Lawson\, Adrian Boult Hall", speaker:"Keynote", start:new Date(1279616400000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_71143502fa3e9bd74f5438f2d13236e7", title:"Create a YouTube for the Blind", speaker:"Stuart Bowness", start:new Date(1279619100000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How MediaCore will change how you display video and podcasts on your site</p><p><a href=\"/talks/speakers/index.html#bowness_stuart\">Stuart Bowness</a></p><p>Talk, 45 minutes (general)</p><p>This talk will introduce MediaCore, a new Python based (open source) video content management system... with a twist. It aims to be the first video platform accessible to the blind/deaf and visually impaired.</p><p>The talk will provide developers, designers, and marketers with an understanding of what MediaCore is, how they might use it, and how it is being used currently.</p><p>The talk will cover a basic introduction to installing MediaCore, how it was developed, it's mission and goals, and an interesting segment on how MediaCore aims to do open source marketing in a different way.</p><p>For more information on the project please see: <a class=\"reference external\" href=\"http://getmediacore.com\">http://getmediacore.com</a></p><p><a href=\"http://wiki.europython.eu/Talks/Create%20A%20Youtube%20For%20The%20Blind\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f4dff03ffd06e87f89978e11631b7435", title:"Silver bullets for the web", speaker:"Sven Passig", start:new Date(1279619100000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Case study of a Silverlight business application accomplished with IronPython on a tight schedule</p><p><a href=\"/talks/speakers/index.html#passig_sven\">Sven Passig</a></p><p>Talk, 45 minutes (general)</p><p>During the last year our company developed a Silverlight business application for a new customer.</p><p>Without IronPython it would not have been possible to write this application within the given timeframe and budget. In the presentation I would like to talk about our development environment (Mono on Mac) the early adopter problems, some tricky programming problems, the changes in IronPython and Silverlight during the development period and our current approach to IronPython/Silverlight (in the meantime we already have built two more applications based on IronPython/Silverlight).</p><p>The perspective of the presentation will be mainly from the manager's point of view. It is designed to show managers and developers the benefits of IronPython-Silverlight for business applications.</p><p><a href=\"http://wiki.europython.eu/Talks/Silver%20Bullets%20For%20The%20Web\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f181d50b22be705436cd4e4903625483", title:"Appstats", speaker:"Guido van Rossum", start:new Date(1279619100000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Appstats - RPC instrumentation and optimizations for Google App Engine</p><p><a href=\"/talks/speakers/index.html#van rossum_guido\">Guido van Rossum</a></p><p>Talk, 45 minutes (intermediate)</p><p>Appstats is a pure userland library (for Python and Java) that inserts instrumentation hooks into the App Engine runtime at the interface between the runtime and services like the datastore. The collected statistics can be browsed in a rich UI which allows drilling down to various levels of detail. The talk will also discuss common optimizations to address typical findings.</p><p><a href=\"http://wiki.europython.eu/Talks/Appstats\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_e1f9ff420fe8e92c9e2fdeebf1a69928", title:"The magical new float repr", speaker:"Mark Dickinson", start:new Date(1279619100000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>The new float repr algorithm in Python 3.x and Python 2.7: what, why and how.</p><p><a href=\"/talks/speakers/index.html#dickinson_mark\">Mark Dickinson</a></p><p>Talk, 45 minutes (general)</p><p>Anyone who's played with floats at the Python interpreter will have seen output like this:</p><pre class=\"literal-block\">&gt;&gt;&gt; 0.10.10000000000000001&gt;&gt;&gt; 6.0/20.0.29999999999999999</pre><p>In Python 3.x and Python 2.7, a new method is used for computing the <cite>repr</cite> of a float, giving the following rather friendlier results:</p><pre class=\"literal-block\">&gt;&gt;&gt; 0.10.1&gt;&gt;&gt; 6.0/20.0.3</pre><p>This seemingly innocent change involved adding over four thousand lines of code to the Python code base and replumbing all of Python's float-to-string and string-to-float conversions. It gives a host of obvious and not-so-obvious benefits.</p><p>In this talk I'll explain exactly what changed, why the change is a Good Thing (no, we didn't do this just to gratuitously break everyone's doctests!), and, time permitting, how the new float repr was implemented.</p><p><a href=\"http://wiki.europython.eu/Talks/The%20Magical%20New%20Float%20Repr\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-62952", title:"Break", speaker:"", start:new Date(1279621800000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_76a0dc1b8cefe384f939bea1543dbf83", title:"BBC @ The Mailbox", speaker:"Sheila Pinner\,<br />Mary Mooney", start:new Date(1279621800000), room:"Partner's Programme", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A visit to see BBC's studios in The Mailbox. We will be able to see programmes being made. We will have the opportunity to try reading the news or presenting a weather report.</p><p><a href=\"/talks/speakers/index.html#Pinner_Sheila\">Sheila Pinner</a></p><p><a href=\"/talks/speakers/index.html#Mooney_Mary\">Mary Mooney</a></p><p>Partner Programme, 60 minutes (general)</p><p>A visit to see BBC's studios in The Mailbox. We will be able to see programmes being made. We will have the opportunity to try reading the news or presenting a weather report.</p><p><a href=\"http://wiki.europython.eu/Talks/Bbc%20The%20Mailbox\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_3c23a1bad16cef13e02f03e8df1f343d", title:"A case for accessibility", speaker:"Stuart Bowness", start:new Date(1279623600000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Building for accessibility, and how it can change design and development practices</p><p><a href=\"/talks/speakers/index.html#bowness_stuart\">Stuart Bowness</a></p><p>Talk, 45 minutes (intermediate)</p><p>In this talk I hope to make a case for factoring accessibility into design and development using MediaCore, which is an open source Python based video CMS, as an example.</p><p>The talk will break down as follows:</p><ol class=\"arabic simple\"><li>Painting the picture - demographics on accessibility and the visually disabled.</li> <li>Understanding the problem - Showing what a day in the life of a visually disabled user is actually like. This may include a guided tour through JAWS or Zoomtext.</li> <li>Building a case for accessibility - This will discuss how we integrated many accessibility features into MediaCore (Our open source, python based, video CMS), and how we justified the investment.</li> <li>Building an accessible video CMS - We will discuss what we have leaned about accessibility, and how it has changed the way we have designed and developed interfaces. We will also discuss closed captioning, audio descriptions, accessible video players, HTML5, and the resources needed in pulling it all together.</li> <li>Dealing with Browsers - We'll cover common programming mistakes and debunk myths about how browsers handle accessibility.</li></ol><p><a href=\"http://wiki.europython.eu/Talks/A%20Case%20For%20Accessibility\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_c0c64fe2795eb13591b8e0dd44534613", title:"How to give a head massage", speaker:"Richard Jones", start:new Date(1279623600000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Help raise money for PSF and impress your girlfriend.</p><p><a href=\"/talks/speakers/index.html#jones_richard\">Richard Jones</a></p><p>Talk, 45 minutes (general)</p><p>Rob is the PSF's official head masseuse. He will teach you how to use head massage as a PSF fund-raising tool.</p><p><a href=\"http://wiki.europython.eu/Talks/How%20To%20Give%20A%20Head%20Massage\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_1f802f3f45c62186229ca0f1b443a785", title:"Pyjamas Technology", speaker:"Luke Leighton", start:new Date(1279623600000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Pyjamas Technology: Projects for both browser and desktop Widget Sets.</p><p><a href=\"/talks/speakers/index.html#leighton_luke\">Luke Leighton</a></p><p>Talk, 90 minutes (intermediate)</p><p>Pyjamas is several projects. The projects combine to provide developers with a way to write python GUI applications once and only once, and either run them as stand-alone Desktop applications on all major desktop OSes, or compile them to javascript, to run in all major web browsers.</p><p>One of the Pyjamas projects is a stand-alone javascript compiler, which can be used with python-spidermonkey, pyv8, spidermonkey or web browser engines; another is a GUI widget set which is incredibly similar to PyGTK2 and PyQT4. By making use of browser engines, the Pyjamas UI Widget set automatically gains the benefits of HTML, HTML5, CSS and Plugins, which PyGTK and PyQT4 cannot take advantage of [without an extension which is often not cross-platform].</p><p>The talk will briefly cover the significant advances over the past year in the javascript compiler (since EP09); also there will be simple demonstrations (e.g. a game of asteroids, 2D Graphs and Google Maps) and explanations of how to interface with web engines such as Django in the most effective way.</p><p><a href=\"http://wiki.europython.eu/Talks/Pyjamas%20Technology\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_ed5c9e5017bf659c42937ff1fa72bf88", title:"Pyradiso Rapid Software Development", speaker:"Bart Demeulenaere", start:new Date(1279623600000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How the multiprocessing module takes Python to a next level of software development.</p><p><a href=\"/talks/speakers/index.html#demeulenaere_bart\">Bart Demeulenaere</a></p><p>Talk, 45 minutes (intermediate)</p><p><strong>Summary</strong></p><p>This really is the presentation of a very early conceptual definition for a project that aims to take Python powered software to the next level of computing. In order to achieve this we want to build on the existing Python infrastructure to create a framework to rapidly create a distributed application. The goal of the presentation is to bounce these ideas around in the audience, get feedback on the ideas and to attract people interested in working on the project.</p><p><strong>Outline</strong></p><p>Python is a well established programming language in a broad range of applications and on a broad range of platforms. The recent releases, starting from 2.6 and upwards, have added a lot of interesting capabilities that have hindered deployments and usage in certain environments. Interesting additions and extensions are:</p><ul class=\"simple\"><li>The multi processing module: take away the limitations imposed by the GIL, enable true native usage of all available processing power in multi core/multi machine environments.</li> <li>https/ssl support (using pyOpenSSL): enable safety in a hostile web/networking environment. Previously already existing modules and distributions of interest are:</li> <li>CherryPy: native Python webserver, easy to use, easy to configure.</li> <li>Portable Python: take all your Python apps on a USB stick and run them everywhere.</li> <li>Python GUI frameworks. The final deliverable of the project should be a framework that allows for easy and rapid development of distributed and highly scalable applications. The framework should honor the following requirements:</li> <li>Applications are inherently client-server type or web application type, so the clients can be native clients or browser based. Both types of application can be equally easily developed and deployed.</li> <li>It must be easy to protect and encrypt the client-server communications.</li> <li>BApplications can be easily configured to consist of multiple processes; either for enhanced performance on a single multi core machine or for real distributed applications (N-tier). The complexities of managing the multiple (remote or local)processes, of sharing and synchronizing data; of distributing task load across the different processes must be hidden for the user of the framework. All individual processes are single threaded by design principle. Data persistence: can be either SQL based or NoSQL based. Code generation: the business objects representing the data of the application should be auto-generated by the framework from a definition (e.g. XML based definition) as much as possible (synchronization, (de)serialization, construction and initialization, getter- and setter- methods, inclusion in collections, …). The user can then derive from the framework generated classes to add or inject functionality.</li></ul><p>The presentation will elaborate on these ideas, present some initial thoughts and ideas, tentative implementations for research purposes. I hope to open a discussion on this topic with the audience to further identify challenges and concerns, solutions and approaches and to attract people interested in working on this, both as a framework developer and as a framework user (application developer).</p><p><a href=\"http://wiki.europython.eu/Talks/Pyradiso%20Rapid%20Software%20Development\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_50c88c5aeb53b6a7bbf03b0094707d11", title:"HTML5", speaker:"Bruce Lawson", start:new Date(1279626300000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_ae9438d2216442183c57b6e5a3a2decd", title:"The Trojan Snake", speaker:"Richard Barrett-Small", start:new Date(1279626300000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>From toolbox to platform… How we introduced Python to a museum.</p><p><a href=\"/talks/speakers/index.html#barrett-small_richard\">Richard Barrett-Small</a></p><p>Talk, 45 minutes (general)</p><p>Over time, a large institution can amass a patchwork of bespoke applications, especially on the web. I will discuss how Python libraries like BeautifulSoup and lxml helped the V&amp;A regain control of its web presence and internal systems.</p><p>I will cover how integrated task management and source control with Trac helps balance the many and varied demands on a museum tech team. This forms a key pillar in the &quot;Python as platform&quot; argument.</p><p>Finally, the inevitable Django bit. How Django delivers API access to over 1 million museum records and how this is a catalyst for the complete redevelopment of the V&amp;A site.</p><p><a href=\"http://wiki.europython.eu/Talks/The%20Trojan%20Snake\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_0d82a249f92bd29707695eaa4a2c14b4", title:"Real time web with eventlet", speaker:"Ben Ford", start:new Date(1279626300000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Building realtime web applications with eventlet, AMQP, repoze and Websockets</p><p><a href=\"/talks/speakers/index.html#ford_ben\">Ben Ford</a></p><p>Talk, 45 minutes (intermediate)</p><p>I'm currently building a server/process monitoring application using supervisor, eventlet rabbitmq, repoze.bfg, raphael, and websockets.</p><p>As a result of my preliminary coding a few things have become apparent:</p><ul class=\"simple\"><li>Eventlet is awesome (I would probably include gevent in this description too)</li> <li>repoze.bfg is an extremely capable and well thought out web framework and doesn't have nearly the profile it deserves</li> <li>Websockets really change the web app landscape and are well worth getting up to speed on</li></ul><p>My talk will cover the implications and benefits of building a realtime web app on the infrastructure mentioned above.</p><p><a href=\"http://wiki.europython.eu/Talks/Real%20Time%20Web%20With%20Eventlet\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-89523", title:"Lunch", speaker:"", start:new Date(1279629000000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_c3b0f880fd7d9bd283d348f7c6ad4a55", title:"Lightning talks", speaker:"", start:new Date(1279634400000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_2b2d2119d286b08cf25255f1b3591416", title:"Real-world TDD on AppEngine", speaker:"Ade Oshineye", start:new Date(1279638000000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Lessons learned from building web apps on App Engine</p><p><a href=\"/talks/speakers/index.html#oshineye_ade\">Ade Oshineye</a></p><p>Talk, 45 minutes (intermediate)</p><p>A talk that will walk you through my experience of trying to build an interesting web application on Google App Engine using Test Driven Development.</p><p>This talk is aimed at people who are already familiar with Python and App Engine but want to know how they can apply the techniques of TDD in this environment. The talk is focussed on sharing and improving upon the lessons I learned in the process of building and maintaining several web applications.</p><p><a href=\"http://wiki.europython.eu/Talks/RealWorld%20Tdd%20On%20Appengine\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_b6918682e7372d9df1c17d4205d2a997", title:"Understanding FluidDB", speaker:"Nicholas Tollervey", start:new Date(1279638000000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>What FluidDB is, why it was built, how it works and why you should use it.</p><p><a href=\"/talks/speakers/index.html#tollervey_nicholas\">Nicholas Tollervey</a></p><p>Talk, 45 minutes (general)</p><p>FluidDB (a database written in Python) has a radical approach to creating, sharing and organising data.</p><p>This introductory talk explains:</p><ul class=\"simple\"><li>What FluidDB is</li> <li>Why FluidDB was written</li> <li>How FluidDB works</li> <li>Where to get involved</li></ul><p>By the end of the talk attendees will know where to get Python client libraries and how to get started using FluidDB in their applications.</p><p><a href=\"http://wiki.europython.eu/Talks/Understanding%20Fluiddb\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_54f573f07a2373023bdbfe73d3dfca31", title:"Intro to Functional Programming", speaker:"Michele Simionato", start:new Date(1279638000000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Programming in Python with a functional mindset</p><p><a href=\"/talks/speakers/index.html#simionato_michele\">Michele Simionato</a></p><p>Talk, 45 minutes (intermediate)</p><p>This is an introductory talk to Functional Programming (FP), with examples in Python and a few other languages. The talk focus on the basics of FP, such as immutability, recursion and side effects control, but it does not touch advanced concepts like monads or combinators.</p><p>My interest is to discuss the lessons learned from FP, even when working primarily with a language (Python) which is not functional. In particular, I want to emphasize FP and unit testing are essentially telling us the same lessons; moreover, I want to show how knowledge of FP helped me a lot in SQL programming.</p><p><a href=\"http://wiki.europython.eu/Talks/Intro%20To%20Functional%20Programming\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f7b57edb0c2a4df3f7b8b0bca8aa701a", title:"Python and Windows", speaker:"Tim Golden", start:new Date(1279638000000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_211589e49110950e66b9914faa740f2d", title:"Robust Python Programs", speaker:"Stefan Schwarzer", start:new Date(1279640700000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Common problems and their remedies in beginners' code</p><p><a href=\"/talks/speakers/index.html#schwarzer_stefan\">Stefan Schwarzer</a></p><p>Talk, 45 minutes (beginners)</p><p>Though Python is easy to learn and gives quick results, especially programmers who start with Python or use it only occasionally sometimes write error-prone or cumbersome code. This talk shows some of these problems and how to avoid them.</p><p>A few of the recurring problem areas are the indentation of Python code (though still less often than one might think), the usage of exceptions, exec/eval and the dangers of os.system.</p><p>Before discussing the problems themselves, the talk explains some features of Python which may result in faulty code. Probably the most important of these features is that Python copies objects only on explicit requests but otherwise just changes bindings to names or other objects. If this sounds incomprehensible, this talk is for you. :-)</p><p><a href=\"http://wiki.europython.eu/Talks/Robust%20Python%20Programs\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_496e914686d0a7fe0ac745f5b670b399", title:"Tickery\, Pyjamas &amp\; FluidDB", speaker:"Terry Jones", start:new Date(1279640700000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_8f73384ab2c59003fcd5d1cf8530c91e", title:"Look Again at the ZCA", speaker:"Mike Rhodes", start:new Date(1279640700000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>As Python applications become larger, how the Zope Component Architecture will help you</p><p><a href=\"/talks/speakers/index.html#rhodes_mike\">Mike Rhodes</a></p><p>Talk, 45 minutes (intermediate)</p><p>One of the major upheavals of Zope 3 was the breaking up of what had been a monolithic architecture into smaller interacting pieces, many of which are usable and valuable outside Zope. One of the core features of Zope is it's component architecture, the ZCA, and the supporting infrastructure. This is now available for use outside Zope; this talk will explain the fundamentals of the ZCA and why you might want to use it.</p><p>As programs get bigger, the ability to componentise them is a great help in raising the level of abstraction and thus reducing the overall complexity of the application. Python is now moving into the enterprise world with a vengeance, a world noted for its complex and changing requirements. The features of the ZCA slot well into this arena, as you can swap components as business logic changes and more easily manage your codebase.</p><p><a href=\"http://wiki.europython.eu/Talks/Look%20Again%20At%20The%20Zca\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f7fe518fb991041b3b81ab81373a1884", title:"Python in the Browser", speaker:"Michael Foord", start:new Date(1279640700000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Python in the Browser with IronPython and Silverlight</p><p><a href=\"/talks/speakers/index.html#foord_michael\">Michael Foord</a></p><p>Talk, 45 minutes (intermediate)</p><p>You write your server code in Python because you want to. You write your browser code in JavaScript because you have to. But with IronPython and Silverlight, you can write your browser code in Python and leave JavaScript behind.</p><p>That's what I've been doing since November last year; writing complex business applications that run in the browser in Python. In this talk we will look at what is possible, including the new “just text” model where Python code is embedded directly in HTML pages. Even if you develop on Linux or Mac, you can still take advantage of Silverlight in the browser.</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20In%20The%20Browser\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-42239", title:"Break", speaker:"", start:new Date(1279643400000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_5020addcd19a5b8781003cf138266e40", title:"Visualizing Software Quality", speaker:"Mark Fink", start:new Date(1279645200000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Improving efficiency of testing initiatives proves difficult in big software projects (&gt;&gt; 1 man year</p><p><a href=\"/talks/speakers/index.html#fink_mark\">Mark Fink</a></p><p>Talk, 45 minutes (intermediate)</p><p>We are facing a software crisis. When software projects grow big (multi person, multi man year) they get difficult to maintain which leads to high maintenance efforts, code duplication, bugs, and related problems. This leads to very limited software lifecycles in areas where software evolves rapidly. For example in an industry setting the software usually will be re-implemented every 3-5 years. This is a huge waste of resources but currently the only foolproof strategy.</p><p>Quality initiatives could make a difference but they always live on a short budget. And since testing is never complete it is desired to drive testing efforts to areas that could benefit the most.</p><p>The root cause of the software crisis is that we can not see, or touch the software like we can see or touch the work products of other engineering disciplines like in construction or mechanics. Also the quality of the end product is not easily accessible like in those of other disciplines. E.g. you instantly see whether a car misses the bumper, a door or the windshield.</p><p>What if we could make the quality of the software visible? This could help us to drive testing efforts or decide if we are ready for go life. The talk will provide in depth insights on how to visualize different aspects of software quality (reference to relevant literature is given University of Maryland, Professor Edward Tufte et al.).</p><p>The talk will feature a demonstration of software quality visualization of the Mozilla Firefox browser. The qa-visualizer first version is based on several open source projects (CouchDb, Python plus some extensions, JavaScript, YUI3).</p><p><a href=\"http://wiki.europython.eu/Talks/Visualizing%20Software%20Quality\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_95ff191ca59111bae382e0477c814ff2", title:"Python RAD with Camelot", speaker:"Erik Janssens", start:new Date(1279645200000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Leverage SQLAlchemy and PyQT to build desktop applications the Django way.</p><p><a href=\"/talks/speakers/index.html#janssens_erik\">Erik Janssens</a></p><p>Talk, 45 minutes (intermediate)</p><p>Camelot uses SQLAlchemy, Elixir and PyQT to build attractive desktop applications the way Django Admin interfaces are defined. This talk will introduce Camelot, the motivations behind it and its design philosophy :</p><blockquote><ul class=\"simple\"><li>How large datasets are handled</li> <li>How everything remains extensible</li> <li>Threading and responsiveness</li></ul></blockquote><p>Next we will walk through the application development cycle including :</p><blockquote><ul class=\"simple\"><li>Setting up a Camelot project</li> <li>Defining models with SQLAlchemy and Elixir</li> <li>Defining table and form views</li> <li>How to extend Camelot and fall back to raw SQLAlchemy or PyQT</li> <li>Unit testing of the GUI with PyQT</li> <li>Deployment options in real life</li></ul></blockquote><p><a href=\"http://wiki.europython.eu/Talks/Python%20Rad%20With%20Camelot\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_64165c03feecef8b483cde155c3e25d9", title:"The ZODB &amp\; Me", speaker:"Daniel Marks", start:new Date(1279645200000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_ed0c9b9100912a5317d0b4d51652675a", title:"Fun with Databases and Django", speaker:"Andrew Godwin", start:new Date(1279645200000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A look at more advanced database usage with Django; better queries, schema edits, and non-rel DBs</p><p><a href=\"/talks/speakers/index.html#godwin_andrew\">Andrew Godwin</a></p><p>Talk, 45 minutes (intermediate)</p><p>Django has an excellent ORM, but the tutorial and your first few sites all follow the same, simple pattern.</p><p>This talk will cover the headier aspects of database interaction with Django; starting with schema changes, and covering custom filtering, raw queries, aggregates, full-text search, and even touching on non-relational databases.</p><p><a href=\"http://wiki.europython.eu/Talks/Fun%20With%20Databases%20And%20Django\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_6f54def33c89e1a9a85138cf0cbaf35e", title:"Hobbyist OpenGL", speaker:"Jonathan Hartley", start:new Date(1279647900000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_4671b53efd556ebb3b972ee65ee74c52", title:"Pythonic Parallelism with CSP", speaker:"Russel Winder", start:new Date(1279647900000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Concurrent Sequential Processes, why it is good, and what it can do for you.</p><p><a href=\"/talks/speakers/index.html#winder_russel\">Russel Winder</a></p><p>Talk, 45 minutes (intermediate)</p><p>Concurrent Sequential Processes (CSP) is a 30 year old theory that will revolutionize programming in the new multi-core computing era. Although the original theory is couched in mathematical terms, you don't have to be a mathematician to use CSP to structure programs. APIs such as Python-CSP do all that for you. Python is great for structuring computations but not good for 'grunt' calculations, ctypes and SWIG with C and C++ come in handy for this.</p><p><a href=\"http://wiki.europython.eu/Talks/Pythonic%20Parallelism%20With%20Csp\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_26bda325d6532ef38775968fb63a8654", title:"Zope Components for the Win", speaker:"Albertas Agejevas", start:new Date(1279647900000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>What the Zope Component Architecture is and how we used it to solve the consultingware problem</p><p><a href=\"/talks/speakers/index.html#agejevas_albertas\">Albertas Agejevas</a></p><p>Talk, 45 minutes (intermediate)</p><p>There are companies that customise their software product to multiple clients. Each client uses a separate configuration that has to be managed by the developers. The individual customisations must be kept from interfering with each other. As the software evolves, each configuration has to be kept in a working state. Let's call this the consultingware problem.</p><p>In this talk I will quickly introduce the Zope Component Architecture and will demonstrate how we used it to address the consultingware problem on a particular business application. I will also review some alternative ways to deal with the same problem.</p><p>Zope Component Architecture is one of the most widely used products of the Zope community. In short, it is a language extension that provides a uniform way to implement pluggability and software configuration.</p><p><a href=\"http://wiki.europython.eu/Talks/Zope%20Components%20For%20The%20Win\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f603a069c4ad0dcb777614c701fae04d", title:"Advanced Django ORM techniques", speaker:"Daniel Roseman", start:new Date(1279647900000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Making more efficient use of the object-relational mapper</p><p><a href=\"/talks/speakers/index.html#roseman_daniel\">Daniel Roseman</a></p><p>Talk, 45 minutes (intermediate)</p><p>Django's ORM is extremely powerful, allowing you to manage your data without ever going near a line of SQL and hiding a multitude of complexities. But its power can sometimes be a curse rather than a blessing, multiplying queries without your knowledge and bringing your database to its knees.</p><p>In this session I explain what's going on behind the scenes and present some techniques to make your ORM use more efficient, showing how to monitor what's going on and how to better deal with relationships, indexes and more.</p><p><a href=\"http://wiki.europython.eu/Talks/Advanced%20Django%20Orm%20Techniques\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_132062eb1d67064d3ec03592615b6bc3", title:"Finish", speaker:"", start:new Date(1279650600000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_5437e2e1e080fd221f2343b69f1a8758", title:"Social\, TBD", speaker:"", start:new Date(1279654200000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_f26f8e3e2a689d09960339f49076c715", title:"Coffee - Conference Day 3", speaker:"", start:new Date(1279701000000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_c48879ddde1bc781495b846d9597b2f8", title:"Richard Jones\, The State of Python\,  Keynote\, Adrian Boult Hall", speaker:"", start:new Date(1279702800000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_abd82fa03134a6a7b58670af38c8610e", title:"Taming Twisted with Generators", speaker:"Raymond Hettinger", start:new Date(1279705500000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Taming Twisted with Generator Trampolines: An Introduction to Monocle</p><p><a href=\"/talks/speakers/index.html#hettinger_raymond\">Raymond Hettinger</a></p><p>Talk, 45 minutes (intermediate)</p><p>The usual style of client/server programming using Twisted involves writing many callbacks and error-handlers. Sequences of events get lost in a sea of unconnected methods. The Monocle module provides a straight-forward way of consolidating event sequences and their error handlers into a single generator. The resulting code is clean, easy-to-write, and easy-to-read.</p><p>This talk walks through examples of how to write client/server logic using Monocle and then it explores how Monocle works, starting with a trampoline model using simple generators, improving the model with generators that can return values, and showing how exceptions can be cleanly wrapped into the model.</p><p>Walk away with a clear understanding of how to use Monocle and how it works.</p><p><a href=\"http://wiki.europython.eu/Talks/Taming%20Twisted%20With%20Generators\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_0685c61e5e467193b49238418bcbf8e3", title:"What I Learned at PyCon", speaker:"Jason Kirtland", start:new Date(1279705500000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Lessons learned over a year of functional web testing at Idealist.org</p><p><a href=\"/talks/speakers/index.html#kirtland_jason\">Jason Kirtland</a></p><p>Talk, 45 minutes (general)</p><p>Have you ever attended a presentation that made you think &quot;Wow, this approach could be exactly what I need- I'm going to implement this right now!&quot;?</p><p>This is the tale of a development team that saw just such a presentation and recollects their real world experiences implementing and evolving the techniques over a year, for better or for worse.</p><p>This whirlwind talk will cover:</p><ul class=\"simple\"><li>Basics of functional web testing</li> <li>Patterns for testing and authoring tests</li> <li>Tips for extending the impact of a small development team</li> <li>Tools, including Selenium and lxml</li></ul><p><a href=\"http://wiki.europython.eu/Talks/What%20I%20Learned%20At%20Pycon\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_efd1a03d6fcf092b1ad2237426399108", title:"Organise a Python code dojo!", speaker:"Nicholas Tollervey", start:new Date(1279705500000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A what, where, when and how guide to running a Python code dojo. Does NOT include free pizza &amp; beer.</p><p><a href=\"/talks/speakers/index.html#tollervey_nicholas\">Nicholas Tollervey</a></p><p>Talk, 45 minutes (general)</p><p>In this talk I aim to:</p><ul class=\"simple\"><li>Explain what a dojo is and why it is a great lightweight means for offline community building.</li> <li>Describe what has worked and failed in the London Python Code Dojo.</li> <li>Provide hints, tips and resources potential dojo hosts might find useful.</li> <li>Get all the attendees to think, &quot;hey, I should organise a dojo&quot;.</li></ul><p><a href=\"http://wiki.europython.eu/Talks/Organise%20A%20Python%20Code%20Dojo\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_d4a974683ff1a297328f8ca3d4789f44", title:"JavaScript 4 Pythonistas", speaker:"Jonathan Fine", start:new Date(1279705500000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Resources to help Python (and JavaScript) programmers with JavaScript</p><p><a href=\"/talks/speakers/index.html#fine_jonathan\">Jonathan Fine</a></p><p>Meeting, 45 minutes (general)</p><p>For all interested in developing (and using) Pythonic experience, guides, software and training material for JavaScript programming.</p><p>This ranges from understanding the difference between the Python and JavaScript object models through to Python to JavaScript translators, and including Pythonic JavaScript libraries.</p><p><a href=\"http://wiki.europython.eu/Talks/Javascript%204%20Pythonistas\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-8917", title:"Break", speaker:"", start:new Date(1279708200000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_cbf752faac259fedff44453b6b25a9a6", title:"Adapting libraries to Twisted", speaker:"Esteve Fernandez", start:new Date(1279710000000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How to &quot;Twistify&quot; an existing library and use it with Twisted seamlessly</p><p><a href=\"/talks/speakers/index.html#fernandez_esteve\">Esteve Fernandez</a></p><p>Talk, 45 minutes (intermediate)</p><p>A major reason for not adopting Twisted is that many 3rd party libraries don't fit well in the Twisted ecosystem due to its constraints regarding blocking I/O and threading.</p><p>Instead of rewriting them from scratch, a more pragmatic approach might be taken: work with &quot;upstream&quot; to integrate Twisted into their project.</p><p>In this talk we'll see several real-world examples of how we at Fluidinfo have successfully ported synchronous blocking libraries to Twisted and released them as Free Software/Open Source:</p><ul class=\"simple\"><li>pure Python libraries with blocking constructs, replaced with its Twisted counterparts: Qpid/txAMQP</li> <li>pure Python libraries that use blocking synchronous network I/O: Avro, Boto</li> <li>mixed Python/C libraries: Thrift</li> <li>pure C libraries with their own event loop: Zookeeper</li></ul><p>I hope that by following these real examples, programmers will learn the intricacies of Twisted and spread its use.</p><p><a href=\"http://wiki.europython.eu/Talks/Adapting%20Libraries%20To%20Twisted\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_9cb6dfb424e0d6e8edf34c3698540560", title:"Mobi", speaker:"Kit Blake", start:new Date(1279710000000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_40cacd5677ec7230f7087350f84b1478", title:"OpenERP demonstration", speaker:"Fabien Pinckaers", start:new Date(1279710000000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Generic presentation of OpenERP software</p><p><a href=\"/talks/speakers/index.html#pinckaers_fabien\">Fabien Pinckaers</a></p><p>Talk, 45 minutes (intermediate)</p><p>Short presentation of the possibilities that OpenERP offer. The stress will be put on the main modules used on the software:</p><ul class=\"simple\"><li>CRM</li> <li>Sales flow</li> <li>Workflow</li> <li>Dashboard</li> <li>Customization</li> <li>DMS</li></ul><p><a href=\"http://wiki.europython.eu/Talks/Openerp%20Demonstration\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_632f7a88577934cb6f656c8ced78ded6", title:"Programming Office with Python", speaker:"Wesley Chun", start:new Date(1279710000000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Lecture on how to use COM to control &amp; program Microsoft Office applications like Word, Excel, PowerPoint, etc</p><p><a href=\"/talks/speakers/index.html#chun_wesley\">Wesley Chun</a></p><p>Talk, 45 minutes (intermediate)</p><p>Like it or not, we live in a world where we will interact with Win32 systems. It may be intermittent or something we have to deal with it on a daily basis, but regardless of how much exposure we face, the power of Python can be used to make our lives easier. In this session, we will explore Win32 COM Client programming using Python to control and communicate with Office applications such as Word, Excel, PowerPoint, and Outlook. COM is a service which allows Win32 applications to interact with each other. (Specifically, well-known applications such as those in Microsoft Office provide COM services, and COM client programs can be written to drive these applications.)</p><p>Traditionally, COM clients are written in VB or (Visual) C++, two very powerful but very different tools; Python is often viewed as a great substitute as it is more powerful than VB and is more expressive and less time-consuming than developing in C++.</p><p>This lecture is designed for both COM developers who want to learn how they can apply Python in their world and also for Python programmers who need to learn how to create COM clients, i.e., auto-generate Excel spreadsheets, create form letters as Word documents, make slide presentations automagically with PowerPoint, send e-mail via Outlook, etc. (We will not be discussing the principles/concepts of COM nor will we be learning about COM+, VSTO, ATL, IDL, MFC, DCOM, ADO, .NET, IronPython, etc.)</p><p>Instead, we will immerse you in COM client programming by learning how to use Python to communicate with some of the Office applications mentioned above. All of the examples used in lecture can be found in Prentice Hall's bestseller, &quot;Core Python Programming&quot; (2nd ed).</p><p><a href=\"http://wiki.europython.eu/Talks/Programming%20Office%20With%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_9a651f94eeb65ac57ede91f3cd68ad10", title:"Recruiting Event", speaker:"", start:new Date(1279710000000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>'Speed' Recruiting</p><p>Other Type of Event, 60 minutes (general)</p><p>Job Seekers: You're enthusiastic Python developers, otherwise you wouldn't be here.</p><p>Recruiters: You want good Python developers, you'll find Europe's best at EuroPython!</p><p>This is an open space for Job Matching, a little like 'speed dating'.</p><blockquote><ul class=\"simple\"><li>If you are a EuroPython Sponsor, and want to recruit Python developers, you may join is this event and give a 5-10 minute 'Lightning Talk' about your company and what it's looking for.</li> <li>if you are developer looking for a job, attend this session: if you wish, you may give a 5 minute 'Lightning Talk' about you and your skills. Following the talks, recruiters and candidates can meet and see if they want to take things further.</li></ul></blockquote><p>Note. Potential recruiters can hire a practice room for private interviews if they wish.</p><p><a href=\"http://wiki.europython.eu/Talks/Recruiting%20Event\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f3fd47dcec2d6ce780f150194f848878", title:"Deferred Gratification", speaker:"Terry Jones", start:new Date(1279712700000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Patterns of asynchronous flow of control with Twisted deferreds</p><p><a href=\"/talks/speakers/index.html#jones_terry\">Terry Jones</a></p><p>Talk, 45 minutes (advanced)</p><p>An indicator of power in an abstraction is the extent to which its building blocks alone can be combined to elegantly solve more complex problems, i.e., without the need for additional mechanisms or ugly hacks. Lisp and the Python itertools module are good examples. When we collectively discover how abstractions can be broadly applied, especially in ways that were initially non-obvious, it's often a strong sign that the abstraction has somehow neatly managed to capture the essence of something important.</p><p>This talk will illustrate how Twisted's deferred class falls squarely into this category. A Twisted deferred, which arranges to process a result that will become available in the future, implements an idea that dates from the mid-1970s. The design and implementation of Twisted's deferreds is minimal and elegant. I will show how to use and combine deferreds and callbacks to produce surprisingly simple and robust solutions to flow of control problems in an asynchronous environment. Although these solutions can be challenging to understand, they require nothing more than a good understanding of the deferred class, knowledge of basic Python, and some comfort in thinking about programming in terms of processing asynchronous events.</p><p><a href=\"http://wiki.europython.eu/Talks/Deferred%20Gratification\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_5c859789c78a25cb36264651bfeb3cfa", title:"HotPy - A comparison", speaker:"Mark Shannon", start:new Date(1279712700000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How do high-performance VMs for Python work? A comparison of HotPy, PyPy and Unladen Swallow</p><p><a href=\"/talks/speakers/index.html#shannon_mark\">Mark Shannon</a></p><p>Talk, 45 minutes (advanced)</p><p>HotPy, PyPy and Unladen Swallow promise large speed ups over CPython. How do they intend to do this?</p><p>To make a fast virtual machine, all the subsystems of that VM must be fast. In this talk we will look at the various subsystems of the VM, including: JIT compilation, optimisation control, garbage collection and concurrency. What are the constraints on the subsystem? What are &quot;ideal&quot; characteristics of that subsystem? How do HotPy, PyPy and UnladenSwallow implement it? How close do they get to the ideal?</p><p>I will pay special attention to optimisation control (determining what to optimise and when) as I think this is what differentiates the three projects the most.</p><p>I will try to be fair in my appraisal of the three VMs, but as I am the author of HotPy I may be biased.</p><p>Finally I will make an informed, but almost certainly wrong, guess as to how much faster than CPython these VMs can get.</p><p><a href=\"http://wiki.europython.eu/Talks/Hotpy%20A%20Comparison\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_cf2e0177ee4cc1699601e1b8808354d3", title:"Tryton as an ERP and Framework", speaker:"Sharoon Thomas", start:new Date(1279712700000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A quick demo on Tryton as a Pythonic framework and ERP system.</p><p><a href=\"/talks/speakers/index.html#thomas_sharoon\">Sharoon Thomas</a></p><p>Talk, 45 minutes (intermediate)</p><p>A quick demo of the following capabilities of Tryton:</p><p><em>Quickly build a module</em> Demonstrate how quick it is to build a simple application on the framework.</p><p><em>OpenOffice Reports</em> Build a simple report on the same model/application in couple of minutes</p><p><em>Email Framework</em> Build a template on the embedded e-mail framework for the same object to demonstrate how email is integrated</p><p><em>Web Framework</em> Simple demo on the same object on how these details could be published to the web</p><p>This simply covers the RAD concept Tryton embraces on the surface level</p><p><a href=\"http://wiki.europython.eu/Talks/Tryton%20As%20An%20Erp%20And%20Framework\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_63e82b9a5d94c1569324a508fd7c21bd", title:"Web Collaboration and Python", speaker:"Paul Boddie", start:new Date(1279712700000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Collaborating on the Internet with MoinMoin and other popular Python Web applications</p><p><a href=\"/talks/speakers/index.html#boddie_paul\">Paul Boddie</a></p><p>Talk, 45 minutes (general)</p><p>Web sites such as those for Python and EuroPython offer collaborative sections in the form of a Wiki (the PythonInfo and EuroPython Wiki respectively), allowing users to communicate and to collectively pool their knowledge and experience in a Web site that rapidly overtakes more traditionally curated content. For some sites, such as python.org, the intention is to have a place where people can write down their notes related to a topic; for others, such as europython.eu, the idea is to have an informal forum for planning and for sharing hints and tips about the conference. Some sites go further and provide a Wiki as a platform to replace a number of other tools in addition to permitting collaboration and communication between its members. For example, the FSFE Fellowship Wiki seeks to replace a content management system as a repository for contributed content, community group coordination, and for maintaining a community event calendar.</p><p>Despite the intense publicity for various Python Web technologies at the framework and library level, applications such as MoinMoin (providing Wiki solutions), Mercurial (version control and repository browsing), ViewVC (repository browsing), Roundup (bug tracking), Trac (Wiki, repository browsing, bug tracking) and Mailman (mailing list management) quietly enjoy widespread use on the public Internet, particularly in support of Free Software development. As Trac and Launchpad demonstrate, many projects have a need for support in connection with a number of different activities and functions, and as a consequence, project hosting provider services (both free of charge and paid for) are perhaps more widely used than ever before.</p><p>This talk covers some of the practical elements of supporting collaborative environments, concentrating mainly on MoinMoin and its use in various Free Software projects and initiatives. It also investigates the potential for combining the widespread but arguably under-appreciated Web applications of the Python world in order to provide readily usable solutions for the management of projects and common activities, whether purely of a software nature, or of a more social nature, such as in the organisation of events like the EuroPython conference.</p><p><a href=\"http://wiki.europython.eu/Talks/Web%20Collaboration%20And%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-5553", title:"Lunch", speaker:"", start:new Date(1279715400000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_730dea9c0d95857236b4dd2361fdacb2", title:"Python class-PostgreSQL method", speaker:"Hannu Krosing", start:new Date(1279720800000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Ship code, not data - Decorators to run class method directly in PostgreSQL database.</p><p><a href=\"/talks/speakers/index.html#krosing_hannu\">Hannu Krosing</a></p><p>Talk, 45 minutes (intermediate)</p><p>While modern Object-Relational Mappers (ORMs) do simplify interacting with databases, they often cause tens or even hundreds of small database requests to travel between python program and the database.</p><p>Packaging all of the data manipulation code into single method and then converting this into a database function has lots of benefits, from reducing database traffic and speeding up execution due to running closer to data to enabling advanced unlimited database scalability using pl/proxy.</p><p>While pl/proxy based &quot;sharding&quot; scales as well as the best noSQL based key-value stores, it retains all of standard SQL integrity guarantees (ACID) for most of your data, and enables another type of integrity (BASE) for the rest. Also, it simplifies most web development, as it lets you drop memcache - why would one need cache when real database access is just as fast, only without maintenance overhead ?</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20ClassPostgresql%20Method\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_189a9114bf2c6528ff3a92012637dc19", title:"Python and the IMAP protocol", speaker:"Bruno Renié", start:new Date(1279720800000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How to talk politely to mail servers</p><p><a href=\"/talks/speakers/index.html#renié_bruno\">Bruno Renié</a></p><p>Talk, 45 minutes (beginners)</p><p>The IMAP (Internet Message Access Protocol) protocol is a widely used protocol to access e-mail on a remote server. IMAP mailboxes can be managed by multiple clients in a synchronized way. This talk will give an overview of what can be done in Python with the IMAP protocol.</p><p>First, a brief overview of the protocol itself will be given: the basic commands to list, retrieve and manage messages within a mailbox, as well as an explanation of the best practices for retrieving email in a harmless way to mail servers.</p><p>Then, I will explain how to use the <tt class=\"docutils literal\"><span class=\"pre\">imaplib</span></tt> module of the standard library, which is a low-level IMAP client that maps IMAP commands to python methods.</p><p>Afterwards I will present <tt class=\"docutils literal\"><span class=\"pre\">IMAPClient</span></tt>, a third-party module built on top of <tt class=\"docutils literal\"><span class=\"pre\">imaplib</span></tt> that provides a more <em>pythonic</em> interface dealing with native Python types instead of raw IMAP data.</p><p>I will conclude by giving examples of how to extend the <tt class=\"docutils literal\"><span class=\"pre\">imaplib</span></tt> module to support additional commands such as IDLE for push mail or Gmail's recently released OAUTH authentication system.</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20And%20The%20Imap%20Protocol\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_875c4dfc619af8e49ee8693b3d11fd58", title:"What Goes Round\, Comes Round", speaker:"John Pinner", start:new Date(1279720800000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_6f73c8aaa47f7f94fb169a908036c9b7", title:"Real Time Websites with Python", speaker:"Henrik Vendelbo", start:new Date(1279720800000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Serving real time updating web pages with Python</p><p><a href=\"/talks/speakers/index.html#vendelbo_henrik\">Henrik Vendelbo</a></p><p>Talk, 45 minutes (intermediate)</p><p>When you want a web page to be automatically updated you need to establish streaming HTTP connections. That kills the performance in traditional web servers.</p><p>In the talk I will look at how to build the server side in a way that can handle a high load of concurrent requests.</p><p><a href=\"http://wiki.europython.eu/Talks/Real%20Time%20Websites%20With%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_b2cbbe2554beb7f70beb38cca7eeabd3", title:"Aerodynamics and Pianos", speaker:"Peter Howard", start:new Date(1279720800000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Quick blast through some python technical computing topics</p><p><a href=\"/talks/speakers/index.html#howard_peter\">Peter Howard</a></p><p>Talk, 60 minutes (intermediate)</p><p>This talk is a quick blast through some python technical computing topics based on some commercially developed aerodynamics applications and a piano music application.</p><p>Real-world examples show the potential of each topic, and a getting-started example gives delegates a jumping-off point.</p><p>The topics are:</p><p>PyQt (GUI package) Using graphs in a GUI - and interacting with the graphs (Chaco) Wrapping 'C' at runtime (by end users!) (Cheetah + Cython) Working with Mr Gates (C#/.Net, Word, Excel, COM) Aircraft maths with SciPy (air flows inside! a wing, simulate landing dynamics, Butterworth filter) Good old fashioned text file parsing and data correlation (defaultdict / keep it simple) A mediator pattern use-case - working with graphs - make it testable, keep it de-coupled Produce linear, (like an essay) software design documentation automatically (doc strings and introspection) Make piano sounds with FluidSynth, sound fonts and Python Midi See also <a class=\"reference external\" href=\"http://www.petes-piano.com\">http://www.petes-piano.com</a> Can a computer work out music notation from sound data only? Making music notation graphics with PyQt, and a novel use of fonts Using PyQt's extensibility to make your graphics interactive A challenge for the community - a public web service to generate sheet music notation from MP3 sound files</p><p><a href=\"http://wiki.europython.eu/Talks/Aerodynamics%20And%20Pianos\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_76ed2af374e8e55bcc19e41d349952af", title:"Custom Runtimes with PyPy", speaker:"Henrik Vendelbo", start:new Date(1279724400000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>PyPy is a good base for running a Python Application without anything to install.</p><p><a href=\"/talks/speakers/index.html#vendelbo_henrik\">Henrik Vendelbo</a></p><p>Talk, 45 minutes (intermediate)</p><p>How do I distribute my solution so it can be run with minimum hassle.</p><p>Bundling the source with all prerequisites in a Zip or a Source Repository can be quite useful.</p><p>In the talk I will cover * Changing command line parameters * Changing sys.path rules * Writing built-in modules * Distributing updates</p><p><a href=\"http://wiki.europython.eu/Talks/Custom%20Runtimes%20With%20Pypy\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_75a7fea4ce72ebffbfbad04c34bd8244", title:"Local user group SIG", speaker:"Zeth", start:new Date(1279724400000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Running a local Python Group</p><p><a href=\"/talks/speakers/index.html#zeth\">Zeth</a></p><p>Talk, 45 minutes (general)</p><p>Want to run or join a local user group in your area? Members of Python West Midlands will lead the session, share their experience and try to match up people from the same areas.</p><p><a href=\"http://wiki.europython.eu/Talks/Local%20User%20Group%20Sig\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_32e8330164af3e4cca753c3e2d435505", title:"Creating Libraries", speaker:"Martijn Faassen", start:new Date(1279724400000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Examining the creative process behind library construction.</p><p><a href=\"/talks/speakers/index.html#faassen_martijn\">Martijn Faassen</a></p><p>Talk, 45 minutes (general)</p><p>I have been creating Python libraries for some time now. We will examine some of these libraries to learn something about the creative process behind them. What works to make a successful library? Why create libraries? What is success anyway?</p><p><a href=\"http://wiki.europython.eu/Talks/Creating%20Libraries\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f93edabaa1d22c16ac759fbe8ec34154", title:"PyUseCase", speaker:"Geoffrey Bache", start:new Date(1279724400000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_aa3afa7b3d4e8d64092e7be240c990dd", title:"Python\, Arduino and Mech Music", speaker:"Matteo Malosio", start:new Date(1279724400000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_35426e53a7bdef886fe82b293e6f022a", title:"Bringing OCCAM to Python", speaker:"Sarah Mount", start:new Date(1279727100000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Introducing python-csp, which makes parallel and concurrent Python just as easy as sequential code</p><p><a href=\"/talks/speakers/index.html#mount_sarah\">Sarah Mount</a></p><p>Talk, 45 minutes (intermediate)</p><p>python-csp is a new(ish) library which brings the powers of OCCAM-like high-level concurrency and parallelism to Python. python-csp makes writing concurrent code just as easy as sequential code and makes it impossible to generate race hazards.</p><p>The library comes with a number of tools to make it easy to construct and test correct code, including a customised shell with extra documentation, specialised tracers (for debugging) and unit testing frameworks. A variant of the library is also available for Jython.</p><p>This talk will introduce the main features of python-csp with a number of realistic(ish) examples, including a web server and boids animation.</p><p><a href=\"http://wiki.europython.eu/Talks/Bringing%20Occam%20To%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_0f5b8c8e56ec7cd396699a357d5d669c", title:"Python for Javascript Apps", speaker:"Thomas Herchenröder", start:new Date(1279727100000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How Python powers development of large-scale Javascript applications</p><p><a href=\"/talks/speakers/index.html#herchenröder_thomas\">Thomas Herchenröder</a></p><p>Talk, 45 minutes (general)</p><p>qooxdoo (<a class=\"reference external\" href=\"http://qooxdoo.org\">qooxdoo.org</a>) is an open-source Javascript framework that specialises in a pure Javascript, object-oriented development of rich Internet applications. Large applications of that type need tool support to automatically track dependencies, compress and optimise Javascript, manage images and other resources, and handle internationalization aspects. This talk is an experience report about developing and maintaining qooxdoo's tool chain, which is entirely written in Python.</p><p>Behind the scenes, code developed with qooxdoo is subject to various transformations. The code is compressed, variable names are shortened and string access is optimised. Code for variants can be pruned, and can automatically be distributed across several files. All this is to optimise load size and startup time of the application in the browser. As additional developer aid, dependencies among pieces of code are automatically detected, code can be normalized and formatted, API documentation can be extracted from comments, translateable strings can be extracted into .po files, or a unit test application be generated.</p><p>This is all done with Python. The heart of many of those features is the construction of a syntax tree from the involved Javascript code, which supports the code optimisations and dependency tracking. But many more utilities have been added around this core. The entire functionality is controlled by a configuration system that uses a JSON-based syntax, and implements its own simple scheme of objects and inheritance to allow re-use on the config level.</p><p>The talk will give an overview of qooxdoo's tool chain and highlight specific parts, challenges met, and lessons learned.</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20For%20Javascript%20Apps\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_01ce713f9990010cf90a1375b94cb040", title:"Regarding re\, regex\, and re2", speaker:"Alex Willmer", start:new Date(1279727100000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_7b217b64f349a432e07d7edaca523cda", title:"Testing coders", speaker:"Grzegorz Jakacki\,<br />Tomasz Walen", start:new Date(1279727100000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How to make sure you don't interview dummies</p><p><a href=\"/talks/speakers/index.html#jakacki_grzegorz\">Grzegorz Jakacki</a> (Codility)</p><p><a href=\"/talks/speakers/index.html#walen_tomasz\">Tomasz Walen</a> (Codility)</p><p>Talk, 45 minutes (advanced)</p><p>Hiring coders is a tricky, bad coders infiltrating your team can wreak havoc. Codility is a tool to filter out non-programming &quot;programmers&quot; before they incur any damage. Codility administers on-line programming tests. We want to show how Codility implementation harnesses Python introspection to perform code scalability tests in 10 different programming languages at once.</p><p><a href=\"http://wiki.europython.eu/Talks/Testing%20Coders\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_8de351442a0001a1a2380e879ab735eb", title:"Python and Machine Learning", speaker:"Semen Trygubenko", start:new Date(1279727100000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>An overview of Python tools available for designing algorithms that evolve behaviours</p><p><a href=\"/talks/speakers/index.html#trygubenko_semen\">Semen Trygubenko</a></p><p>Talk, 45 minutes (intermediate)</p><p>A major focus of machine learning research is to automatically learn to recognize complex patterns and make intelligent decisions based on data; the difficulty lies in the fact that the set of all possible behaviors given all possible inputs is too complex to describe generally in programming languages, so that in effect programs must automatically describe programs.</p><p>Python is great for brainstorming and trying out new ideas. I will give an overview of the tools that are available to date that can assist in rapid prototyping and design of machine learning programs in Python.</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20And%20Machine%20Learning\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-25335", title:"Break", speaker:"", start:new Date(1279729800000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_1cfeaebd6ac5931f5da715abb2d9a2e4", title:"Speed Thrills!", speaker:"Charlie Clark", start:new Date(1279731600000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>An introduction to the Repoze.BFG Framwork</p><p><a href=\"/talks/speakers/index.html#clark_charlie\">Charlie Clark</a></p><p>Talk, 45 minutes (intermediate)</p><p>Drawing on over ten years' practical experience from across the Python web development community, <a class=\"reference external\" href=\"http://bfg.repoze.org/\">Repoze.BFG</a> represents current best practice in web application frameworks: it is quick to set up and play with; it is blazingly fast; it is extensively tested and documented; will run where you want it and it is only as big as you need it. It really does tick all the boxes.</p><p>BFG makes use of component archictecture for both speed and extensibility. This makes BFG suitable both for &quot;simple&quot; sites such as wikis and blogs with the component architecture providing a clear path to reliability and scalability should your application require them. One of BFG's strengths is that not to sites or applications are identical.</p><p>And, as BFG is happy to run on a relational database, Couch or Mongo DBs, the ZODB or even Google App Engine you can develop knowing that deployment is guaranteed.</p><p>The presentation will cover the core ideas behind BFG and at the end of it you might want to give it a try.</p><p><a href=\"http://wiki.europython.eu/Talks/Speed%20Thrills\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_34e7e3a1ff430cb96a7c6b5f2c921a25", title:"Maths - with No Programming", speaker:"Robert Cumming", start:new Date(1279731600000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Want to solve maths problems with as little as possible programming - here's how to with python</p><p><a href=\"/talks/speakers/index.html#cumming_robert\">Robert Cumming</a></p><p>Talk, 45 minutes (general)</p><p>For scientists, mathematicians, engineers and maths people who generally want to perform some mathematical calculations but do not want to have to learn to much (if any) programming. It is also suitable to software engineers who support a individual/team or teams of the above people.</p><p>The talk will cover the following:</p><ol class=\"arabic simple\"><li>How to set up (in theory) your work environment to achieve this.</li> <li>How to evolve your method(s).</li> <li>Why Python is good for this.</li> <li>An example of how this can be done supported commercially in Python.</li></ol><p>If you use numpy or scipy, then this will be of use to you.</p><p><a href=\"http://wiki.europython.eu/Talks/Maths%20With%20No%20Programming\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_0025d237e005b9884d13e0347911c71e", title:"A Python's DNA", speaker:"Erik Groeneveld", start:new Date(1279731600000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Away with the complicated plug and play frameworks! Welcome Python</p><p><a href=\"/talks/speakers/index.html#groeneveld_erik\">Erik Groeneveld</a></p><p>Talk, 45 minutes (advanced)</p><p>While developing Meresco (meresco.org) we hit the 'configuration problem':</p><p>How to create a system from components? How to configure individual components? How to specify interface dependencies? How to support data flow between components? How to write it all down? How to avoid obligatory interfaces for components? How to keep it simple?</p><p>We settled for a few simple rules:</p><p>In stead of XML, use Python to write it down. Use generators to facilitate data flow. Interfaces are methods. Dependencies are observers.</p><p>It was rather simple to create (although somewhat abstract) and our main questions were:</p><p>Will it be powerful enough? Will it remain maintainable? Will it perform?</p><p>After three years, the answers to all of these questions turned out to be Yes!</p><p>We are very pleased that the guess we took turned out right and we like to share what we did.</p><p>We also: <a class=\"reference external\" href=\"http://meresco.com/documentation/meresco-core/2.22.9/MerescoComponentLibrary.txt\">http://meresco.com/documentation/meresco-core/2.22.9/MerescoComponentLibrary.txt</a> (under the unhelpful name &quot;Meresco Component Library&quot;)</p><p><a href=\"http://wiki.europython.eu/Talks/A%20PythonS%20Dna\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_d35e31118b0cb283a05570e7312e2653", title:"The Guardian and Appengine", speaker:"Michael Brunton-Spall", start:new Date(1279731600000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A story about a massively scalable app written to journalistic deadlines</p><p><a href=\"/talks/speakers/index.html#brunton-spall_michael\">Michael Brunton-Spall</a></p><p>Talk, 45 minutes (beginners)</p><p>&quot;Let people viewing the page vote at anytime whether they like or dislike what the party leader is saying. Oh, and lets show it with a real time graph&quot;</p><p>3 election debates 3 days of development How did we scale this to handle potentially millions of views</p><p><a href=\"http://wiki.europython.eu/Talks/The%20Guardian%20And%20Appengine\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_8f91d638765ea34154e15e6acbfcc074", title:"Spell-checking adventures", speaker:"Paul Redman", start:new Date(1279734300000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Implementing Hunspell as a Windows DLL, usable from many versions of Python</p><p><a href=\"/talks/speakers/index.html#redman_paul\">Paul Redman</a></p><p>Talk, 45 minutes (intermediate)</p><blockquote><ul><li><p class=\"first\">objective</p><blockquote><ul><li><p class=\"first\">make a spell checker available</p><blockquote><ul><li><p class=\"first\">under Windows</p><blockquote><ul class=\"simple\"><li>although the approach should work under Linux</li></ul></blockquote></li><li><p class=\"first\">in as many of Python 2.x, 3.x and Ironpython as possible</p><blockquote><ul class=\"simple\"><li>aside: why are so few extensions available for Python 3.x?</li></ul></blockquote></li><li><p class=\"first\">precompiled</p></li></ul></blockquote></li></ul></blockquote></li><li><p class=\"first\">discovery</p><blockquote><ul><li><p class=\"first\">choosing a spelling checker</p><blockquote><ul class=\"simple\"><li>history: ASpell, Ispell, MySpell, Hunspell</li></ul></blockquote></li></ul></blockquote></li><li><p class=\"first\">building it</p><blockquote><ul><li><p class=\"first\">preferably, using an open-source compiler</p></li><li><p class=\"first\">MSYS and MinGW</p><blockquote><ul class=\"simple\"><li>compared to Cygwin</li></ul></blockquote></li><li><p class=\"first\">as a DLL</p></li><li><p class=\"first\">tidying up the exported functions</p></li></ul></blockquote></li><li><p class=\"first\">interface design</p><blockquote><ul><li><p class=\"first\">how DLLs work</p><blockquote><ul class=\"simple\"><li>C vs C++ interface</li></ul></blockquote></li><li><p class=\"first\">interface options</p><blockquote><ul><li><p class=\"first\">different ways extensions are constructed</p><blockquote><ul><li><p class=\"first\">no Python in DLL</p></li><li><p class=\"first\">Python in interface layer of DLL</p><blockquote><ul class=\"simple\"><li>SWIG</li></ul></blockquote></li><li><p class=\"first\">Python deep into DLL</p></li></ul></blockquote></li><li><p class=\"first\">why does this matter?</p></li></ul></blockquote></li><li><p class=\"first\">convenience of use</p><blockquote><ul class=\"simple\"><li>example calling code</li> <li>introduction to Hunspell interface</li></ul></blockquote></li></ul></blockquote></li><li><p class=\"first\">ctypes</p><blockquote><ul class=\"simple\"><li>availability</li> <li>typical ctypes method (with code example)</li> <li>a few gotchas</li></ul></blockquote></li><li><p class=\"first\">testing</p><blockquote><ul><li><p class=\"first\">existing test suite</p><blockquote><ul class=\"simple\"><li>Unicode issues (non-BMP)</li></ul></blockquote></li><li><p class=\"first\">IronPython issues</p></li></ul></blockquote></li><li><p class=\"first\">installer</p><blockquote><ul class=\"simple\"><li>creating an installer</li></ul></blockquote></li><li><p class=\"first\">future work</p><blockquote><ul class=\"simple\"><li>performance investigation</li></ul></blockquote></li></ul></blockquote><p><a href=\"http://wiki.europython.eu/Talks/SpellChecking%20Adventures\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_1de8260eea0c63fa7bede3f393730c9f", title:"The Trails of EasyExtend", speaker:"Kay Schlühr", start:new Date(1279734300000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How EasyExtend 4 turns programming language transformation into ordinary Python scripting</p><p><a href=\"/talks/speakers/index.html#schlühr_kay\">Kay Schlühr</a></p><p>Talk, 45 minutes (advanced)</p><p>EasyExtend started as a framework for building extension languages for Python. As such it was advocated and presented for the first time at EuroPython 2007.</p><p>In the meantime EasyExtend has undergone two major shifts. The first shift was due to the introduction of a novel parser generator architecture called <em>Trail</em>, which supports the concept of <em>trace based parsing</em>. With Trail the parser generator moved from the periphery to the center of EasyExtend. The second shift was caused by the discovery that with the aid of Trail and techniques like parse tree interpolation each language has equal weight within the system. In the second step Python was moved from the center to the periphery.</p><p>Over the time EasyExtend became more principled, abstract and elegant. It is a host for a plethora of techniques related to grammars, state machines and languages. In my talk I will touch some of the most relevant aspects of EasyExtend and motivate using it in everyday programming.</p><p><a href=\"http://wiki.europython.eu/Talks/The%20Trails%20Of%20Easyextend\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_c80590481e2cb1f68f9397718fc0c2e1", title:"Lightning strikes &gt\;thrice", speaker:"Harald Armin Massa", start:new Date(1279734300000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_a4cfe218f43d4ef22fc1d412428be860", title:"Flatland Form Processing", speaker:"Scott Wilson", start:new Date(1279734300000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>An introduction to HTML form processing using flatland.</p><p><a href=\"/talks/speakers/index.html#wilson_scott\">Scott Wilson</a></p><p>Talk, 45 minutes (intermediate)</p><p><em>Flatland</em> is a schema-based data serialization toolkit used to convert data between structured python representations and flattened representations such as HTML forms with optional validation support.</p><p>In this talk we'll begin with a quick review of the basics of HTML form processing:</p><ul class=\"simple\"><li>Type-conversion and validation of incoming POST data</li> <li>Re-population of data in outgoing HTML form (eg. in case of validation errors)</li> <li>Population of model objects for persistence or other onward data processing as appropriate</li></ul><p>Next we'll make a brief tour through a few existing form processing tools in the cheeseshop. Finally we'll make the case for using a schema-based approach and demonstrate how flatland streamlines the common steps mentioned above.</p><p>We'll close with a brief look at other areas where a similar workflow can be applied (there's more to life than HTML forms!) such as REST and JSON APIs, config file validation and more.</p><p><a class=\"reference external\" href=\"http://pypi.python.org/pypi/flatland\">http://pypi.python.org/pypi/flatland</a></p><p><a href=\"http://wiki.europython.eu/Talks/Flatland%20Form%20Processing\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_1d658c7606f87462e1eba3bab12b5482", title:"You don't use Grok", speaker:"Martijn Faassen", start:new Date(1279734300000), room:"Lecture Room 1", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>It's okay you don't use Grok. But what can you learn from it?</p><p><a href=\"/talks/speakers/index.html#faassen_martijn\">Martijn Faassen</a></p><p>Talk, 45 minutes (general)</p><p>Grok is a web framework, like so many others. Grok employs some concepts and technology that may be unusual to users of other web frameworks. While Grok may not be in your future, some of ideas behind Grok might be - Grok is Zope technology, and we've been ahead of the curve before. Learn about the future! Or at least a crazy alternative present!</p><p><a href=\"http://wiki.europython.eu/Talks/You%20DonT%20Use%20Grok\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_132062eb1d67064d3ec03592615b6bc3", title:"Finish", speaker:"", start:new Date(1279737000000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_4559620636d27c0ca07e641b3260996e", title:"Conference Dinner", speaker:"", start:new Date(1279740600000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_35177352f9f58f1a095dfaee99cbf0f0", title:"Coffee - Conference Day 4", speaker:"", start:new Date(1279787400000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_a24f90bcea89de4ae07d4ed975fdd37f", title:"Guido van Rossum\, Adrian Boult Hall", speaker:"Keynote", start:new Date(1279789200000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_6d284ba5445917583b10a23bde938e2d", title:"JavaScript and MillerColumns", speaker:"Jonathan Fine", start:new Date(1279791900000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How and why I built a handy gadget in JavaScript with Python habits and testing.</p><p><a href=\"/talks/speakers/index.html#fine_jonathan\">Jonathan Fine</a></p><p>Talk, 45 minutes (intermediate)</p><p>With Miller Columns (the iTunes interface) you can browse lots of data in a small area. Ideal for an on-screen help widget.</p><p>I've written a generic Miller Columns in JavaScript, but heavily influenced by Python (for programming style and testing).</p><p>Related projects are <a class=\"reference external\" href=\"http://bitbucket.org/jfine/jsmod\">http://bitbucket.org/jfine/jsmod</a> and <a class=\"reference external\" href=\"http://bitbucket.org/jfine/python-testutil\">http://bitbucket.org/jfine/python-testutil</a>.</p><p><a href=\"http://wiki.europython.eu/Talks/Javascript%20And%20Millercolumns\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_ee2eaa0bf1a2122ec03494ed0d30b2c8", title:"Theming websites with XDV", speaker:"Laurence Rowe", start:new Date(1279791900000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>We write XSLT so you don't have to!</p><p><a href=\"/talks/speakers/index.html#rowe_laurence\">Laurence Rowe</a></p><p>Talk, 45 minutes (intermediate)</p><p>XDV is a way to apply a style/theme contained in a static HTML web page (usually with related CSS, JavaScript and image resources) to a dynamic website created using any server-side technology. The theme is compiled down to an XSLT file which can then be deployed with Apache, Nginx, or in a WSGI pipeline.</p><p>This talk introduces the XDV rules syntax; compares XDV with Deliverance; and presents some examples of XDV in production.</p><p><a href=\"http://wiki.europython.eu/Talks/Theming%20Websites%20With%20Xdv\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f19e4f9bb5419c9331283d13fd1351b7", title:"Building a python web app", speaker:"Stuart Bowness", start:new Date(1279791900000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_225ca3c7bc002fac06dd59ab459e9843", title:"The Guardian API - 1 Year On", speaker:"Michael Brunton-Spall", start:new Date(1279791900000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>What's changed in the year since we launched the open content beta?</p><p><a href=\"/talks/speakers/index.html#brunton-spall_michael\">Michael Brunton-Spall</a></p><p>Talk, 45 minutes (intermediate)</p><p>One year on from releasing the guardian API we are preparing to come out of beta.</p><p>What have we learnt, what has changed and for those who haven't seen it during it's beta, what actually is it.</p><p><a href=\"http://wiki.europython.eu/Talks/The%20Guardian%20Api%201%20Year%20On\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-85885", title:"Break", speaker:"", start:new Date(1279794600000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_4182cb51851604b596dc93082890d105", title:"Caching techniques in python", speaker:"Michael Domanski", start:new Date(1279796400000), room:"Adrian Boult Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Some of the pitfalls and common practices in caching python and django</p><p><a href=\"/talks/speakers/index.html#domanski_michael\">Michael Domanski</a></p><p>Talk, 90 minutes (general)</p><p>Ideas, problems and commonly used techniques used in an effort to improve response time of your python application, specifically targeted at web applications built around django.</p><p>Talk starts with discussion of more abstract problems, common patterns of code that can lead to an error.</p><p>Then we three levels of caching, that be cache on the level of single process, whole application and whole deployment (content, media, statics and so on)</p><p>Talk ends with some time for anyone to ask a question.</p><p><a href=\"http://wiki.europython.eu/Talks/Caching%20Techniques%20In%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_f166e4e93550cd02b022e09105f4ca88", title:"gevent network library", speaker:"Denis Bilenko", start:new Date(1279796400000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Using lightweight threads to write simpler network applications</p><p><a href=\"/talks/speakers/index.html#bilenko_denis\">Denis Bilenko</a></p><p>Talk, 45 minutes (intermediate)</p><p>This talk introduces gevent network library.</p><p>First we'll briefly look at the traditional ways to do network programming in Python.</p><p>We will then see how greenlet/libevent-based gevent lets you write clean concurrent applications that do not require callback chains and state machines yet can handle thousands of connections efficiently. Comparing to real OS threads, coroutines are simpler to use, do not require synchronization and use orders of magnitude less memory.</p><p>We'll then learn gevent API (which is very simple because it reuses lots of concepts and interfaces from the standard library).</p><p>In conclusion we will cover some real world examples.</p><p><a href=\"http://wiki.europython.eu/Talks/Gevent%20Network%20Library\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_9ba5e66c1c6a5c40b6f60279e9374986", title:"SHOGUN", speaker:"Soeren Sonnenburg", start:new Date(1279796400000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>A Large Scale Machine Learning Toolbox</p><p><a href=\"/talks/speakers/index.html#sonnenburg_soeren\">Soeren Sonnenburg</a></p><p>Talk, 45 minutes (intermediate)</p><p>We have developed the SHOGUN machine learning toolbox, which features algorithms for hidden markov models, regression and classification problems. SHOGUN's focus is on Support Vector Machines (SVMs), but it also implements a number of linear methods like Linear Discriminant Analysis, Linear Programming Machines and Perceptrons.</p><p>SVMs are a popular machine learning technique that have become increasingly mature during the last decade, often providing state-of-the-art performance while maintaining the ability to cope with large amounts of potentially diverse training examples.</p><p>A central feature of SVMs is its ability to employ kernels, which allows to encapsulate the input domain from the learning algorithm, allowing to incorporate arbitrary objects such as real vectors, strings or graphs into the learning problem.</p><p>SHOGUN provides a generic SVM interface enabling the choice between fifteen different SVM optimizers as back-ends, among them the state of the art LibSVM and SVMlight, SVMOcas or Liblinear. These SVMs can be easily combined with more than 35 different kernel functions (see <a class=\"reference external\" href=\"http://www.shogun-toolbox.org/doc\">http://www.shogun-toolbox.org/doc</a>).</p><p>All of SHOGUN's core functions are encapsulated in a library libshogun written in C++ for maximal performance. Built around SHOGUN's core we provide two types of python interfaces: A modular interface created with SWIG (The Simplified Wrapper and Interface Generator) and a static interface that conveniently interfaces with python. Note that in addition to the python interfaces, SHOGUN provides bindings from C++ to other languages, such as R, Octave and Matlab with the exact same syntax and functionality.</p><p>A central design goal of SHOGUN was to enable large-scale learning. Therefore, we implemented auxiliary routines that allow faster computation of combinations of kernel elements that lead to significant speedups during training and evaluation enabling us to solve several large-scale learning problems in biological sequence analysis involving millions of sequences. Furthermore, linear SVMs can be efficiently trained by computing feature spaces on-the-fly, even allowing to mix sparse, dense and other data types.</p><p>For some learning problems, data sets are available for several input domains (e.g. gene expression measurements and blood measurements for each patient), which can be incorporated into a learning problem by using several kernels. Often, however, it is unclear how much discriminative information each kernel provides. As a remedy, Multiple Kernel Learning (MKL) provides the means to learn a weighting for each of the used kernels. State-of-the-art algorithms for MKL are implemented in SHOGUN. Additionally, SHOGUN provides algorithms for multi-class problems and multi-task learning.</p><p>Finally, we would like to point out that SHOGUN has successfully been used in a range of problems from Computational Biology, such as gene finding (mGene; <a class=\"reference external\" href=\"http://mgene.org\">http://mgene.org</a>), splice-site prediction (ASP; <a class=\"reference external\" href=\"http://www.fml.tuebingen.mpg.de/raetsch/suppl/splice\">http://www.fml.tuebingen.mpg.de/raetsch/suppl/splice</a>), promoter recognition (ARTS; <a class=\"reference external\" href=\"http://www.fml.tuebingen.mpg.de/raetsch/suppl/arts\">http://www.fml.tuebingen.mpg.de/raetsch/suppl/arts</a>), Transcription-factor binding prediction (KIRMES; <a class=\"reference external\" href=\"http://www.fml.tuebingen.mpg.de/raetsch/suppl/kirmes\">http://www.fml.tuebingen.mpg.de/raetsch/suppl/kirmes</a>), protein sub-cellular localization and others.</p><p>In the proposed talk, we will give an introduction to the core functionality of SHOGUN, such as training SVMs with different solvers and kernels, introduce some of its more recent features, such as Multiple Kernel Learning and Multitask Learning and finally give a few illustrative practical examples from Computational Biology.</p><p><a href=\"http://wiki.europython.eu/Talks/Shogun\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_1eae882dfb6e9c4db906baafddb22162", title:"PyCharm", speaker:"Dmitry Jemerov", start:new Date(1279796400000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_1e80147d2b49e950c707e6492772d8f9", title:"Arduino and Python", speaker:"Michael Sparks", start:new Date(1279799100000), room:"Recital Hall", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>How we used arduino and python for prototyping new user interfaces</p><p><a href=\"/talks/speakers/index.html#sparks_michael\">Michael Sparks</a></p><p>Talk, 45 minutes (general)</p><p>This talk will cover how we used arduino and python in a rapid prototyping session to develop new user experiences / controls for interacting with media. The arduino platform is an open source hardware platform with onboard microcontroller, useful for creating everything from sensors through to robots.</p><p>As well as covering one of the actual resulting tools, it will also cover how to get started with arduino and python, and strategies for integrating the two systems together, along with testing. The system to be discussed includes motorised feedback, computer vision, and orientation detection, and integrating python, arduino, Kamaelia and Open CV.</p><p><a href=\"http://wiki.europython.eu/Talks/Arduino%20And%20Python\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_ea9dfa246719fc54e71f9a86b44117c2", title:"Python and EDA", speaker:"Donald McCarthy", start:new Date(1279799100000), room:"New Lecture Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Current Electronic Design Automation tools leave many gaps for Python</p><p><a href=\"/talks/speakers/index.html#mccarthy_donald\">Donald McCarthy</a></p><p>Talk, 45 minutes (intermediate)</p><p>The TCL scripting language was designed for the EDA industry and is embedded in many tools. Perl tends to be the scripting language used by those creating design flows by linking together EDA tools. Despite this, their are signs of Python being used in niches; and my own experiments have shown that Python can be used productively, and innovatively in the world of chip design.</p><p>This talk will give an introduction to the world of EDA and how scripting languages used in it; mention a couple of Python-based tools that are available now, and a couple of my successes in using, hopes and fears for Python in this field.</p><p><a href=\"http://wiki.europython.eu/Talks/Python%20And%20Eda\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_d390e4301ef6a3f22a0afb480ff633d5", title:"Building a web framework IDE", speaker:"Håkan Rosenhorn", start:new Date(1279799100000), room:"Library Theatre", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:"<p>Building a development environment for a Python web framework</p><p><a href=\"/talks/speakers/index.html#hakan_rosenhorn\">Håkan Rosenhorn</a> (ESN Social Software AB)</p><p>Talk, 45 minutes (intermediate)</p><p>Covering the design and implementation of a full-fledged IDE for a Python web framework. Bridging the gap between controllers and templates, managing development servers, catching errors before they happen, integrated testing and inspection management for optimizations. Discussing the Python language structure, and the effects it has on an IDE.</p><p><a href=\"http://wiki.europython.eu/Talks/Building%20A%20Web%20Framework%20Ide\">Additional Information ...</a></p>"}));
s.push(new Session({id:"session_20100719T124658Z-1881", title:"Lunch", speaker:"", start:new Date(1279801800000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_c799f9b9ac78b0baebfcea3d404dec41", title:"Lightning Talks and Close", speaker:"", start:new Date(1279807200000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
s.push(new Session({id:"session_132062eb1d67064d3ec03592615b6bc3", title:"Finish", speaker:"", start:new Date(1279816200000), room:"", difficulty:"N/A", technology:"Awesome", track:"Ruby", abstract:""}));
window.sessions = s; })();